<z:domain xmlns:z="http://www.parsqube.de/ns/xco/structure" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:ojp="http://www.vdv.de/ojp" xmlns:siri="http://www.siri.org.uk/siri" xmlns:gml="http://www.opengis.net/gml/3.2" xmlns:ifopt="http://www.ifopt.org.uk/ifopt" xmlns:acsb="http://www.ifopt.org.uk/acsb" xmlns:wsdl="http://wsdl.siri.org.uk" xmlns:orc="http://datex2.eu/schema/2_0RC1/2_0" z:name="opengis" z:id="d5" countXsds="4">
  <z:schema xml:base="/home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" filePath="/home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
    <z:components count="29">
      <z:simpleType z:name="gml:booleanList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(xs:boolean)">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType z:name="xs:boolean" z:typeCategory="'sb'"/>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:booleanOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:boolean}, {xs:anyURI})">
        <z:annotation>
          <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
              <z:union>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:enumeration z:value="inapplicable"/>
                          <z:enumeration z:value="missing"/>
                          <z:enumeration z:value="template"/>
                          <z:enumeration z:value="unknown"/>
                          <z:enumeration z:value="withheld"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:pattern z:value="other:\w{2,}"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:boolean" z:typeCategory="sb"/>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:booleanOrNilReasonList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:boolean}, {xs:anyURI}))">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType>
            <z:simpleType z:name="gml:booleanOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:boolean}, {xs:anyURI})">
              <z:annotation>
                <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
              </z:annotation>
              <z:union>
                <z:unionMember>
                  <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
                    <z:union>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:enumeration z:value="inapplicable"/>
                                <z:enumeration z:value="missing"/>
                                <z:enumeration z:value="template"/>
                                <z:enumeration z:value="unknown"/>
                                <z:enumeration z:value="withheld"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:pattern z:value="other:\w{2,}"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                    </z:union>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:boolean" z:typeCategory="sb"/>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:itemType>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:doubleList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(xs:double)">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType z:name="xs:double" z:typeCategory="'sb'"/>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:doubleOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:double}, {xs:anyURI})">
        <z:annotation>
          <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
              <z:union>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:enumeration z:value="inapplicable"/>
                          <z:enumeration z:value="missing"/>
                          <z:enumeration z:value="template"/>
                          <z:enumeration z:value="unknown"/>
                          <z:enumeration z:value="withheld"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:pattern z:value="other:\w{2,}"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:double" z:typeCategory="sb"/>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:doubleOrNilReasonList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:double}, {xs:anyURI}))">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType>
            <z:simpleType z:name="gml:doubleOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:double}, {xs:anyURI})">
              <z:annotation>
                <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
              </z:annotation>
              <z:union>
                <z:unionMember>
                  <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
                    <z:union>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:enumeration z:value="inapplicable"/>
                                <z:enumeration z:value="missing"/>
                                <z:enumeration z:value="template"/>
                                <z:enumeration z:value="unknown"/>
                                <z:enumeration z:value="withheld"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:pattern z:value="other:\w{2,}"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                    </z:union>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:double" z:typeCategory="sb"/>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:itemType>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:integerList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(xs:integer)">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType z:name="xs:integer" z:typeCategory="'sb'"/>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:integerOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:integer}, {xs:anyURI})">
        <z:annotation>
          <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
              <z:union>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:enumeration z:value="inapplicable"/>
                          <z:enumeration z:value="missing"/>
                          <z:enumeration z:value="template"/>
                          <z:enumeration z:value="unknown"/>
                          <z:enumeration z:value="withheld"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:pattern z:value="other:\w{2,}"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:integer" z:typeCategory="sb"/>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:integerOrNilReasonList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:integer}, {xs:anyURI}))">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType>
            <z:simpleType z:name="gml:integerOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:integer}, {xs:anyURI})">
              <z:annotation>
                <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
              </z:annotation>
              <z:union>
                <z:unionMember>
                  <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
                    <z:union>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:enumeration z:value="inapplicable"/>
                                <z:enumeration z:value="missing"/>
                                <z:enumeration z:value="template"/>
                                <z:enumeration z:value="unknown"/>
                                <z:enumeration z:value="withheld"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:pattern z:value="other:\w{2,}"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                    </z:union>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:integer" z:typeCategory="sb"/>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:itemType>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:NameList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(xs:Name)">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType z:name="xs:Name" z:typeCategory="'sb'"/>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:NameOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:Name}, {xs:anyURI})">
        <z:annotation>
          <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
              <z:union>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:enumeration z:value="inapplicable"/>
                          <z:enumeration z:value="missing"/>
                          <z:enumeration z:value="template"/>
                          <z:enumeration z:value="unknown"/>
                          <z:enumeration z:value="withheld"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:pattern z:value="other:\w{2,}"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:Name" z:typeCategory="sb"/>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:NameOrNilReasonList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:Name}, {xs:anyURI}))">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType>
            <z:simpleType z:name="gml:NameOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:Name}, {xs:anyURI})">
              <z:annotation>
                <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
              </z:annotation>
              <z:union>
                <z:unionMember>
                  <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
                    <z:union>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:enumeration z:value="inapplicable"/>
                                <z:enumeration z:value="missing"/>
                                <z:enumeration z:value="template"/>
                                <z:enumeration z:value="unknown"/>
                                <z:enumeration z:value="withheld"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                      <z:unionMember>
                        <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                          <z:faceted>
                            <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                            <z:restrictions>
                              <z:restriction>
                                <z:pattern z:value="other:\w{2,}"/>
                              </z:restriction>
                            </z:restrictions>
                          </z:faceted>
                        </z:simpleType>
                      </z:unionMember>
                    </z:union>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:Name" z:typeCategory="sb"/>
                </z:unionMember>
                <z:unionMember>
                  <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:itemType>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:NCNameList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(xs:NCName)">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType z:name="xs:NCName" z:typeCategory="'sb'"/>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
        <z:union>
          <z:unionMember>
            <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
              <z:faceted>
                <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                <z:restrictions>
                  <z:restriction>
                    <z:enumeration z:value="inapplicable"/>
                    <z:enumeration z:value="missing"/>
                    <z:enumeration z:value="template"/>
                    <z:enumeration z:value="unknown"/>
                    <z:enumeration z:value="withheld"/>
                  </z:restriction>
                </z:restrictions>
              </z:faceted>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
              <z:faceted>
                <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                <z:restrictions>
                  <z:restriction>
                    <z:pattern z:value="other:\w{2,}"/>
                  </z:restriction>
                </z:restrictions>
              </z:faceted>
            </z:simpleType>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:NilReasonType" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})">
        <z:annotation>
          <z:documentation>gml:NilReasonType defines a content model that allows recording of an explanation for a void value or other exception.
gml:NilReasonType is a union of the following enumerated values:
-	inapplicable there is no value
-	missing the correct value is not readily available to the sender of this data. Furthermore, a correct value may not exist
-	template the value will be available later
-	unknown the correct value is not known to, and not computable by, the sender of this data. However, a correct value probably exists
-	withheld the value is not divulged
-	other:text other brief explanation, where text is a string of two or more characters with no included spaces
and
-	anyURI which should refer to a resource which describes the reason for the exception
A particular community may choose to assign more detailed semantics to the standard values provided. Alternatively, the URI method enables a specific or more complete explanation for the absence of a value to be provided elsewhere and indicated by-reference in an instance document.
gml:NilReasonType is used as a member of a union in a number of simple content types where it is necessary to permit a value from the NilReasonType union as an alternative to the primary type.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
              <z:union>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:enumeration z:value="inapplicable"/>
                          <z:enumeration z:value="missing"/>
                          <z:enumeration z:value="template"/>
                          <z:enumeration z:value="unknown"/>
                          <z:enumeration z:value="withheld"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:pattern z:value="other:\w{2,}"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:QNameList" z:typeCategory="sl" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="List(xs:QName)">
        <z:annotation>
          <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
        </z:annotation>
        <z:list>
          <z:itemType z:name="xs:QName" z:typeCategory="'sb'"/>
        </z:list>
      </z:simpleType>
      <z:simpleType z:name="gml:SignType" z:typeCategory="sr" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="xs:string: enum=(+|-)">
        <z:annotation>
          <z:documentation>gml:SignType is a convenience type with values "+" (plus) and "-" (minus).</z:documentation>
        </z:annotation>
        <z:faceted>
          <z:baseType z:name="xs:string" z:typeCategory="sb"/>
          <z:restrictions>
            <z:restriction z:name="gml:SignType">
              <z:enumeration z:value="-"/>
              <z:enumeration z:value="+"/>
            </z:restriction>
          </z:restrictions>
        </z:faceted>
      </z:simpleType>
      <z:simpleType z:name="gml:stringOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:string}, {xs:anyURI})">
        <z:annotation>
          <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
              <z:union>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:enumeration z:value="inapplicable"/>
                          <z:enumeration z:value="missing"/>
                          <z:enumeration z:value="template"/>
                          <z:enumeration z:value="unknown"/>
                          <z:enumeration z:value="withheld"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
                <z:unionMember>
                  <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                    <z:faceted>
                      <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                      <z:restrictions>
                        <z:restriction>
                          <z:pattern z:value="other:\w{2,}"/>
                        </z:restriction>
                      </z:restrictions>
                    </z:faceted>
                  </z:simpleType>
                </z:unionMember>
              </z:union>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:string" z:typeCategory="sb"/>
          </z:unionMember>
          <z:unionMember>
            <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:UomIdentifier" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: pattern=#[^: \n\r\t]+#}, {xs:anyURI: pattern=#([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*#})">
        <z:annotation>
          <z:documentation>The simple type gml:Uomidentifier defines the syntax and value space of the unit of measure identifier.</z:documentation>
        </z:annotation>
        <z:union>
          <z:unionMember>
            <z:simpleType z:name="gml:UomSymbol" z:typeCategory="sr" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="xs:string: pattern=#[^: \n\r\t]+#">
              <z:annotation>
                <z:documentation>This type specifies a character string of length at least one, and restricted such that it must not contain any of the following characters: ":" (colon), " " (space), (newline), (carriage return), (tab). This allows values corresponding to familiar abbreviations, such as "kg", "m/s", etc. 
It is recommended that the symbol be an identifier for a unit of measure as specified in the "Unified Code of Units of Measure" (UCUM) (http://aurora.regenstrief.org/UCUM). This provides a set of symbols and a grammar for constructing identifiers for units of measure that are unique, and may be easily entered with a keyboard supporting the limited character set known as 7-bit ASCII. ISO 2955 formerly provided a specification with this scope, but was withdrawn in 2001. UCUM largely follows ISO 2955 with modifications to remove ambiguities and other problems.</z:documentation>
              </z:annotation>
              <z:faceted>
                <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                <z:restrictions>
                  <z:restriction z:name="gml:UomSymbol">
                    <z:pattern z:value="[^: \n\r\t]+"/>
                  </z:restriction>
                </z:restrictions>
              </z:faceted>
            </z:simpleType>
          </z:unionMember>
          <z:unionMember>
            <z:simpleType z:name="gml:UomURI" z:typeCategory="sr" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="xs:anyURI: pattern=#([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*#">
              <z:annotation>
                <z:documentation>This type specifies a URI, restricted such that it must start with one of the following sequences: "#", "./", "../", or a string of characters followed by a ":". These patterns ensure that the most common URI forms are supported, including absolute and relative URIs and URIs that are simple fragment identifiers, but prohibits certain forms of relative URI that could be mistaken for unit of measure symbol . 
NOTE	It is possible to re-write such a relative URI to conform to the restriction (e.g. "./m/s").
In an instance document, on elements of type gml:MeasureType the mandatory uom attribute shall carry a value corresponding to either 
-	a conventional unit of measure symbol,
-	a link to a definition of a unit of measure that does not have a conventional symbol, or when it is desired to indicate a precise or variant definition.</z:documentation>
              </z:annotation>
              <z:faceted>
                <z:baseType z:name="xs:anyURI" z:typeCategory="sb"/>
                <z:restrictions>
                  <z:restriction z:name="gml:UomURI">
                    <z:pattern z:value="([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*"/>
                  </z:restriction>
                </z:restrictions>
              </z:faceted>
            </z:simpleType>
          </z:unionMember>
        </z:union>
      </z:simpleType>
      <z:simpleType z:name="gml:UomSymbol" z:typeCategory="sr" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="xs:string: pattern=#[^: \n\r\t]+#">
        <z:annotation>
          <z:documentation>This type specifies a character string of length at least one, and restricted such that it must not contain any of the following characters: ":" (colon), " " (space), (newline), (carriage return), (tab). This allows values corresponding to familiar abbreviations, such as "kg", "m/s", etc. 
It is recommended that the symbol be an identifier for a unit of measure as specified in the "Unified Code of Units of Measure" (UCUM) (http://aurora.regenstrief.org/UCUM). This provides a set of symbols and a grammar for constructing identifiers for units of measure that are unique, and may be easily entered with a keyboard supporting the limited character set known as 7-bit ASCII. ISO 2955 formerly provided a specification with this scope, but was withdrawn in 2001. UCUM largely follows ISO 2955 with modifications to remove ambiguities and other problems.</z:documentation>
        </z:annotation>
        <z:faceted>
          <z:baseType z:name="xs:string" z:typeCategory="sb"/>
          <z:restrictions>
            <z:restriction z:name="gml:UomSymbol">
              <z:pattern z:value="[^: \n\r\t]+"/>
            </z:restriction>
          </z:restrictions>
        </z:faceted>
      </z:simpleType>
      <z:simpleType z:name="gml:UomURI" z:typeCategory="sr" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="xs:anyURI: pattern=#([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*#">
        <z:annotation>
          <z:documentation>This type specifies a URI, restricted such that it must start with one of the following sequences: "#", "./", "../", or a string of characters followed by a ":". These patterns ensure that the most common URI forms are supported, including absolute and relative URIs and URIs that are simple fragment identifiers, but prohibits certain forms of relative URI that could be mistaken for unit of measure symbol . 
NOTE	It is possible to re-write such a relative URI to conform to the restriction (e.g. "./m/s").
In an instance document, on elements of type gml:MeasureType the mandatory uom attribute shall carry a value corresponding to either 
-	a conventional unit of measure symbol,
-	a link to a definition of a unit of measure that does not have a conventional symbol, or when it is desired to indicate a precise or variant definition.</z:documentation>
        </z:annotation>
        <z:faceted>
          <z:baseType z:name="xs:anyURI" z:typeCategory="sb"/>
          <z:restrictions>
            <z:restriction z:name="gml:UomURI">
              <z:pattern z:value="([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*"/>
            </z:restriction>
          </z:restrictions>
        </z:faceted>
      </z:simpleType>
      <z:complexType z:name="gml:CodeListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="gml:NameList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType z:name="xs:Name" z:typeCategory="'sb'"/>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:CodeListType">
          <z:attribute z:name="codeSpace" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:CodeOrNilReasonListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="gml:NameOrNilReasonList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType>
              <z:simpleType z:name="gml:NameOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:Name}, {xs:anyURI})">
                <z:annotation>
                  <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
                </z:annotation>
                <z:union>
                  <z:unionMember>
                    <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
                      <z:union>
                        <z:unionMember>
                          <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                            <z:faceted>
                              <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                              <z:restrictions>
                                <z:restriction>
                                  <z:enumeration z:value="inapplicable"/>
                                  <z:enumeration z:value="missing"/>
                                  <z:enumeration z:value="template"/>
                                  <z:enumeration z:value="unknown"/>
                                  <z:enumeration z:value="withheld"/>
                                </z:restriction>
                              </z:restrictions>
                            </z:faceted>
                          </z:simpleType>
                        </z:unionMember>
                        <z:unionMember>
                          <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                            <z:faceted>
                              <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                              <z:restrictions>
                                <z:restriction>
                                  <z:pattern z:value="other:\w{2,}"/>
                                </z:restriction>
                              </z:restrictions>
                            </z:faceted>
                          </z:simpleType>
                        </z:unionMember>
                      </z:union>
                    </z:simpleType>
                  </z:unionMember>
                  <z:unionMember>
                    <z:builtinType z:name="xs:Name" z:typeCategory="sb"/>
                  </z:unionMember>
                  <z:unionMember>
                    <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
                  </z:unionMember>
                </z:union>
              </z:simpleType>
            </z:itemType>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:CodeOrNilReasonListType">
          <z:attribute z:name="codeSpace" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="xs:string"/>
        <z:extension z:name="gml:CodeType">
          <z:attribute z:name="codeSpace" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="xs:string"/>
        <z:extension z:name="gml:CodeType">
          <z:attribute z:name="codeSpace" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
        </z:extension>
        <z:restriction z:name="gml:CodeWithAuthorityType">
          <z:attribute z:name="codeSpace" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:use="required" z:occ="1:1"/>
        </z:restriction>
      </z:complexType>
      <z:complexType z:name="gml:CoordinatesType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="xs:string"/>
        <z:extension z:name="gml:CoordinatesType">
          <z:attribute z:name="decimal" z:type="xs:string" z:typeCategory="sb" z:typeDesc="xs:string" z:default="." z:occ="1:1"/>
          <z:attribute z:name="cs" z:type="xs:string" z:typeCategory="sb" z:typeDesc="xs:string" z:default="," z:occ="1:1"/>
          <z:attribute z:name="ts" z:type="xs:string" z:typeCategory="sb" z:typeDesc="xs:string" z:default=" " z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:MeasureListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="gml:doubleList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType z:name="xs:double" z:typeCategory="'sb'"/>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:MeasureListType">
          <z:attribute z:name="uom" z:type="gml:UomIdentifier" z:typeCategory="su" z:typeDesc="Union({xs:string: pattern=#[^: \n\r\t]+#}, {xs:anyURI: pattern=#([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*#})" z:use="required" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:MeasureOrNilReasonListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="gml:doubleOrNilReasonList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType>
              <z:simpleType z:name="gml:doubleOrNilReason" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:double}, {xs:anyURI})">
                <z:annotation>
                  <z:documentation>Extension to the respective XML Schema built-in simple type to allow a choice of either a value of the built-in simple type or a reason for a nil value.</z:documentation>
                </z:annotation>
                <z:union>
                  <z:unionMember>
                    <z:simpleType z:name="gml:NilReasonEnumeration" z:typeCategory="su" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd" z:typeDesc="Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})">
                      <z:union>
                        <z:unionMember>
                          <z:simpleType z:typeID="typedef-32.1" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(inapplicable|missing|template|unknown|withheld)">
                            <z:faceted>
                              <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                              <z:restrictions>
                                <z:restriction>
                                  <z:enumeration z:value="inapplicable"/>
                                  <z:enumeration z:value="missing"/>
                                  <z:enumeration z:value="template"/>
                                  <z:enumeration z:value="unknown"/>
                                  <z:enumeration z:value="withheld"/>
                                </z:restriction>
                              </z:restrictions>
                            </z:faceted>
                          </z:simpleType>
                        </z:unionMember>
                        <z:unionMember>
                          <z:simpleType z:typeID="typedef-32.2" z:typeLocator="simpleType[xs:NilReasonEnumeration]#simpleType" z:typeCategory="sr" z:typeDesc="xs:string: pattern=#other:\w{2,}#">
                            <z:faceted>
                              <z:baseType z:name="xs:string" z:typeCategory="sb"/>
                              <z:restrictions>
                                <z:restriction>
                                  <z:pattern z:value="other:\w{2,}"/>
                                </z:restriction>
                              </z:restrictions>
                            </z:faceted>
                          </z:simpleType>
                        </z:unionMember>
                      </z:union>
                    </z:simpleType>
                  </z:unionMember>
                  <z:unionMember>
                    <z:builtinType z:name="xs:double" z:typeCategory="sb"/>
                  </z:unionMember>
                  <z:unionMember>
                    <z:builtinType z:name="xs:anyURI" z:typeCategory="sb"/>
                  </z:unionMember>
                </z:union>
              </z:simpleType>
            </z:itemType>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:MeasureOrNilReasonListType">
          <z:attribute z:name="uom" z:type="gml:UomIdentifier" z:typeCategory="su" z:typeDesc="Union({xs:string: pattern=#[^: \n\r\t]+#}, {xs:anyURI: pattern=#([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*#})" z:use="required" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:MeasureType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/basicTypes.xsd">
        <z:baseType z:name="xs:double"/>
        <z:extension z:name="gml:MeasureType">
          <z:attribute z:name="uom" z:type="gml:UomIdentifier" z:typeCategory="su" z:typeDesc="Union({xs:string: pattern=#[^: \n\r\t]+#}, {xs:anyURI: pattern=#([a-zA-Z][a-zA-Z0-9\-\+\.]*:|\.\./|\./|#).*#})" z:use="required" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
    </z:components>
  </z:schema>
  <z:schema xml:base="/home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd" filePath="/home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
    <z:components count="31">
      <z:element z:name="gml:AbstractCurve" z:type="gml:AbstractCurveType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:AbstractGeometricPrimitive" z:type="gml:AbstractGeometricPrimitiveType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometry" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:AbstractGeometry" z:type="gml:AbstractGeometryType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGML" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:curveProperty" z:type="gml:CurvePropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>This property element either references a curve via the XLink-attributes or contains the curve element. curveProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractCurve.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:Envelope" z:type="gml:EnvelopeType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractObject" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>Envelope defines an extent using a pair of positions defining opposite corners in arbitrary dimensions. The first direct position is the "lower corner" (a coordinate position consisting of all the minimal ordinates for each dimension for all points within the envelope), the second one the "upper corner" (a coordinate position consisting of all the maximal ordinates for each dimension for all points within the envelope).
The use of the properties "coordinates" and "pos" has been deprecated. The explicitly named properties "lowerCorner" and "upperCorner" shall be used instead.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:LineString" z:type="gml:LineStringType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractCurve" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A LineString is a special curve that consists of a single segment with linear interpolation. It is defined by two or more coordinate tuples, with linear interpolation between them. The number of direct positions in the list shall be at least two.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:Point" z:type="gml:PointType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:pointProperty" z:type="gml:PointPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:pos" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
      <z:element z:name="gml:posList" z:type="gml:DirectPositionListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
      <z:element z:name="gml:vector" z:type="gml:VectorType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
      <z:group z:name="gml:geometricPositionGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).</z:documentation>
        </z:annotation>
        <z:choice z:occ="1:1">
          <z:element z:name="gml:pos" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
          <z:element z:name="gml:pointProperty" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:PointPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.</z:documentation>
            </z:annotation>
          </z:element>
        </z:choice>
      </z:group>
      <z:group z:name="gml:geometricPositionListGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>GML supports two different ways to specify a list of geometric positions: either by a sequence of geometric positions (by reusing the group definition) or a sequence of direct positions (element posList). 
The posList element allows for a compact way to specify the coordinates of the positions, if all positions are represented in the same coordinate reference system.</z:documentation>
        </z:annotation>
        <z:choice z:occ="1:1">
          <z:element z:name="gml:posList" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
          <z:group z:name="gml:geometricPositionGroup" z:reference="yes" z:groupFromCache="yes" z:maxOccurs="unbounded" z:occ="1:*">
            <z:annotation>
              <z:documentation>GML supports two different ways to specify a geometric position: either by a direct position (a data type) or a point (a geometric object).
pos elements are positions that are "owned" by the geometric primitive encapsulating this geometric position.
pointProperty elements contain a point that may be referenced from other geometry elements or reference another point defined elsewhere (reuse of existing points).</z:documentation>
            </z:annotation>
            <z:choice z:occ="1:1">
              <z:element z:name="gml:pos" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
              <z:element z:name="gml:pointProperty" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:PointPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
                <z:annotation>
                  <z:documentation>This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.</z:documentation>
                </z:annotation>
              </z:element>
            </z:choice>
          </z:group>
        </z:choice>
      </z:group>
      <z:complexType z:name="gml:AbstractCurveType" z:abstract="true" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:extension z:name="gml:AbstractGeometricPrimitiveType"/>
        <z:extension z:name="gml:AbstractCurveType"/>
      </z:complexType>
      <z:complexType z:name="gml:AbstractGeometricPrimitiveType" z:abstract="true" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:extension z:name="gml:AbstractGeometricPrimitiveType"/>
      </z:complexType>
      <z:complexType z:name="gml:AbstractGeometryType" z:abstract="true" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:CurveArrayPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A container for an array of curves. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*">
          <z:element z:name="gml:AbstractCurve" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractCurveType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:CurvePropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A property that has a curve as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:occ="0:1">
          <z:element z:name="gml:AbstractCurve" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractCurveType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractCurve element is the abstract head of the substitution group for all (continuous) curve elements.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:DirectPositionListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:doubleList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType z:name="xs:double" z:typeCategory="'sb'"/>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:DirectPositionListType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
          <z:attribute z:name="count" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:doubleList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType z:name="xs:double" z:typeCategory="'sb'"/>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:DirectPositionType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:EnvelopeType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:choice z:occ="1:1">
          <z:sequence z:occ="1:1">
            <z:element z:name="gml:lowerCorner" z:type="gml:DirectPositionType" z:typeCategory="cs" z:occ="1:1"/>
            <z:element z:name="gml:upperCorner" z:type="gml:DirectPositionType" z:typeCategory="cs" z:occ="1:1"/>
          </z:sequence>
          <z:element z:name="gml:pos" z:reference="yes" z:elementFromCache="yes" z:minOccurs="2" z:maxOccurs="2" z:occ="2:2" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
        </z:choice>
        <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
          <z:annotation>
            <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
          </z:annotation>
          <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
          <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
          <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
            </z:annotation>
          </z:attributeGroup>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:GeometricPrimitivePropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A property that has a geometric primitive as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:occ="0:1">
          <z:element z:name="gml:AbstractGeometricPrimitive" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractGeometricPrimitiveType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometry" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractGeometricPrimitive element is the abstract head of the substitution group for all (pre- and user-defined) geometric primitives.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:GeometryArrayPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>If a feature has a property which takes an array of geometry elements as its value, this is called a geometry array property. A generic type for such a geometry property is GeometryArrayPropertyType. 
The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*">
          <z:element z:name="gml:AbstractGeometry" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractGeometryType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGML" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:GeometryPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A geometric property may either be any geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same or another document). Note that either the reference or the contained element shall be given, but not both or none.
If a feature has a property that takes a geometry element as its value, this is called a geometry property. A generic type for such a geometry property is GeometryPropertyType.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:occ="0:1">
          <z:element z:name="gml:AbstractGeometry" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractGeometryType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGML" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractGeometry element is the abstract head of the substitution group for all geometry elements of GML. This includes pre-defined and user-defined geometry elements. Any geometry element shall be a direct or indirect extension/restriction of AbstractGeometryType and shall be directly or indirectly in the substitution group of AbstractGeometry.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:LineStringType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:extension z:name="gml:AbstractGeometricPrimitiveType"/>
        <z:extension z:name="gml:AbstractCurveType"/>
        <z:extension z:name="gml:LineStringType">
          <z:sequence z:occ="1:1">
            <z:choice z:occ="1:1">
              <z:choice z:minOccurs="2" z:maxOccurs="unbounded" z:occ="2:*">
                <z:element z:name="gml:pos" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
                <z:element z:name="gml:pointProperty" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:PointPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
                  <z:annotation>
                    <z:documentation>This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:choice>
              <z:element z:name="gml:posList" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
            </z:choice>
          </z:sequence>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:PointArrayPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>gml:PointArrayPropertyType is a container for an array of points. The elements are always contained inline in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*">
          <z:element z:name="gml:Point" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:PointType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:PointPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>A property that has a point as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:occ="0:1">
          <z:element z:name="gml:Point" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:PointType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>A Point is defined by a single coordinate tuple. The direct position of a point is specified by the pos element which is of type DirectPositionType.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:PointType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:extension z:name="gml:AbstractGeometricPrimitiveType"/>
        <z:extension z:name="gml:PointType">
          <z:sequence z:occ="1:1">
            <z:choice z:occ="1:1">
              <z:element z:name="gml:pos" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
            </z:choice>
          </z:sequence>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:VectorType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:baseType z:name="gml:doubleList" z:typeCategory="sl">
          <z:annotation>
            <z:documentation>A type for a list of values of the respective simple type.</z:documentation>
          </z:annotation>
          <z:list>
            <z:itemType z:name="xs:double" z:typeCategory="'sb'"/>
          </z:list>
        </z:baseType>
        <z:extension z:name="gml:DirectPositionType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:restriction z:name="gml:VectorType"/>
      </z:complexType>
      <z:attributeGroup z:name="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
        </z:annotation>
      </z:attributeGroup>
      <z:attributeGroup z:name="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
        <z:annotation>
          <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
        </z:annotation>
        <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
        <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
        <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
          <z:annotation>
            <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
          </z:annotation>
        </z:attributeGroup>
      </z:attributeGroup>
    </z:components>
  </z:schema>
  <z:schema xml:base="/home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd" filePath="/home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
    <z:components count="26">
      <z:simpleType z:name="gml:AggregationType" z:final="#all" z:typeCategory="sr" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd" z:typeDesc="xs:string: enum=(array|bag|record|sequence|set|table)">
        <z:faceted>
          <z:baseType z:name="xs:string" z:typeCategory="sb"/>
          <z:restrictions>
            <z:restriction z:name="gml:AggregationType">
              <z:enumeration z:value="set"/>
              <z:enumeration z:value="bag"/>
              <z:enumeration z:value="sequence"/>
              <z:enumeration z:value="array"/>
              <z:enumeration z:value="record"/>
              <z:enumeration z:value="table"/>
            </z:restriction>
          </z:restrictions>
        </z:faceted>
      </z:simpleType>
      <z:element z:name="gml:abstractAssociationRole" z:type="gml:AssociationRoleType" z:typeCategory="cc" z:abstract="true" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>Applying this pattern shall restrict the multiplicity of objects in a property element using this content model to exactly one. An instance of this type shall contain an element representing an object, or serve as a pointer to a remote object.
Applying the pattern to define an application schema specific property type allows to restrict
-	the inline object to specified object types, 
-	the encoding to "by-reference only" (see 7.2.3.7),
-	the encoding to "inline only" (see 7.2.3.8).</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:AbstractGML" z:type="gml:AbstractGMLType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractObject" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>The abstract element gml:AbstractGML is "any GML object having identity".   It acts as the head of an XML Schema substitution group, which may include any element which is a GML feature, or other object, with identity.  This is used as a variable in content models in GML core and application schemas.  It is effectively an abstract superclass for all GML objects.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:abstractInlineProperty" z:type="gml:InlinePropertyType" z:typeCategory="cc" z:abstract="true" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>gml:abstractInlineProperty may be used as the head of a subtitution group of more specific elements providing a value inline.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:AbstractObject" z:abstract="true" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>This element has no type defined, and is therefore implicitly (according to the rules of W3C XML Schema) an XML Schema anyType. It is used as the head of an XML Schema substitution group which unifies complex content and certain simple content elements used for datatypes in GML, including the gml:AbstractGML substitution group.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:abstractReference" z:type="gml:ReferenceType" z:typeCategory="ca" z:abstract="true" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>gml:abstractReference may be used as the head of a subtitution group of more specific elements providing a value by-reference.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:abstractStrictAssociationRole" z:type="gml:AssociationRoleType" z:typeCategory="cc" z:abstract="true" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>This element shows how an element 
	declaration may include a Schematron constraint to limit the property to act 
	in either inline or by-reference mode, but not both.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:associationName" z:type="xs:string" z:typeCategory="sb" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd"/>
      <z:element z:name="gml:defaultCodeSpace" z:type="xs:anyURI" z:typeCategory="sb" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd"/>
      <z:element z:name="gml:descriptionReference" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:gmlProfileSchema" z:type="xs:anyURI" z:typeCategory="sb" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd"/>
      <z:element z:name="gml:identifier" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:name" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:reversePropertyName" z:type="xs:string" z:typeCategory="sb" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>If the value of an object property is another object and that object contains also a property for the association between the two objects, then this name of the reverse property may be encoded in a gml:reversePropertyName element in an appinfo annotation of the property element to document the constraint between the two properties. The value of the element shall contain the qualified name of the property element.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:targetElement" z:type="xs:string" z:typeCategory="sb" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd"/>
      <z:group z:name="gml:StandardObjectProperties" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:sequence z:occ="1:1">
          <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
            </z:annotation>
          </z:element>
          <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
            </z:annotation>
          </z:element>
          <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
      </z:group>
      <z:complexType z:name="gml:AbstractGMLType" z:abstract="true" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:sequence z:occ="1:1">
          <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
            <z:sequence z:occ="1:1">
              <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                <z:annotation>
                  <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                </z:annotation>
              </z:element>
              <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                <z:annotation>
                  <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                </z:annotation>
              </z:element>
              <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                <z:annotation>
                  <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                </z:annotation>
              </z:element>
            </z:sequence>
          </z:group>
        </z:sequence>
        <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
          </z:annotation>
        </z:attribute>
      </z:complexType>
      <z:complexType z:name="gml:AbstractMemberType" z:abstract="true" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>To create a collection of GML Objects that are not all features, a property type shall be derived by extension from gml:AbstractMemberType.
This abstract property type is intended to be used only in object types where software shall be able to identify that an instance of such an object type is to be interpreted as a collection of objects.
By default, this abstract property type does not imply any ownership of the objects in the collection. The owns attribute of gml:OwnershipAttributeGroup may be used on a property element instance to assert ownership of an object in the collection. A collection shall not own an object already owned by another object.
</z:documentation>
        </z:annotation>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:AbstractMetadataPropertyType" z:abstract="true" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>To associate metadata described by any XML Schema with a GML object, a property element shall be defined whose content model is derived by extension from gml:AbstractMetadataPropertyType. 
The value of such a property shall be metadata. The content model of such a property type, i.e. the metadata application schema shall be specified by the GML Application Schema.
By default, this abstract property type does not imply any ownership of the metadata. The owns attribute of gml:OwnershipAttributeGroup may be used on a metadata property element instance to assert ownership of the metadata. 
If metadata following the conceptual model of ISO 19115 is to be encoded in a GML document, the corresponding Implementation Specification specified in ISO/TS 19139 shall be used to encode the metadata information.
</z:documentation>
        </z:annotation>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:AssociationRoleType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:sequence z:minOccurs="0" z:occ="0:1">
          <z:any z:namespace="##any"/>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:InlinePropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:sequence z:occ="1:1">
          <z:any z:namespace="##any"/>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>gml:ReferenceType is intended to be used in application schemas directly, if a property element shall use a "by-reference only" encoding.</z:documentation>
        </z:annotation>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:attribute z:name="gml:id" z:type="xs:ID" z:typeCategory="sb" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
        </z:annotation>
      </z:attribute>
      <z:attributeGroup z:name="gml:AggregationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>A GML Object Collection is any GML Object with a property element in its content model whose content model is derived by extension from gml:AbstractMemberType.
In addition, the complex type describing the content model of the GML Object Collection may also include a reference to the attribute group gml:AggregationAttributeGroup to provide additional information about the semantics of the object collection.  This information may be used by applications to group GML objects, and optionally to order and index them.
The allowed values for the aggregationType attribute are defined by gml:AggregationType. See 8.4 of ISO/IEC 11404:1996 for the meaning of the values in the enumeration.</z:documentation>
        </z:annotation>
        <z:attribute z:name="aggregationType" z:type="gml:AggregationType" z:typeCategory="sr" z:typeDesc="xs:string: enum=(array|bag|record|sequence|set|table)" z:occ="1:1"/>
      </z:attributeGroup>
      <z:attributeGroup z:name="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
        </z:annotation>
        <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
      </z:attributeGroup>
      <z:attributeGroup z:name="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
        <z:annotation>
          <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
        </z:annotation>
        <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
      </z:attributeGroup>
    </z:components>
  </z:schema>
  <z:schema xml:base="/home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd" filePath="/home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
    <z:components count="15">
      <z:element z:name="gml:AbstractRing" z:type="gml:AbstractRingType" z:typeCategory="ce" z:abstract="true" z:substitutionGroup="gml:AbstractObject" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>An abstraction of a ring to support surface boundaries of different complexity.
The AbstractRing element is the abstract head of the substitution group for all closed boundaries of a surface patch.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:AbstractSurface" z:type="gml:AbstractSurfaceType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:exterior" z:type="gml:AbstractRingPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:interior" z:type="gml:AbstractRingPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:LinearRing" z:type="gml:LinearRingType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractRing" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:Polygon" z:type="gml:PolygonType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractSurface" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A Polygon is a special surface that is defined by a single surface patch (see D.3.6). The boundary of this patch is coplanar and the polygon uses planar interpolation in its interior. 
The elements exterior and interior describe the surface boundary of the polygon.</z:documentation>
        </z:annotation>
      </z:element>
      <z:element z:name="gml:surfaceProperty" z:type="gml:SurfacePropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>This property element either references a surface via the XLink-attributes or contains the surface element. surfaceProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for AbstractSurface.</z:documentation>
        </z:annotation>
      </z:element>
      <z:complexType z:name="gml:AbstractRingPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A property with the content model of gml:AbstractRingPropertyType encapsulates a ring to represent the surface boundary property of a surface.</z:documentation>
        </z:annotation>
        <z:sequence z:occ="1:1">
          <z:element z:name="gml:AbstractRing" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractRingType" z:typeCategory="ce" z:abstract="true" z:substitutionGroup="gml:AbstractObject" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
            <z:annotation>
              <z:documentation>An abstraction of a ring to support surface boundaries of different complexity.
The AbstractRing element is the abstract head of the substitution group for all closed boundaries of a surface patch.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
      </z:complexType>
      <z:complexType z:name="gml:AbstractRingType" z:abstract="true" z:typeCategory="ce" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
	</z:complexType>
      <z:complexType z:name="gml:AbstractSurfaceType" z:abstract="true" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:extension z:name="gml:AbstractGeometricPrimitiveType"/>
        <z:extension z:name="gml:AbstractSurfaceType"/>
      </z:complexType>
      <z:complexType z:name="gml:LinearRingPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A property with the content model of gml:LinearRingPropertyType encapsulates a linear ring to represent a component of a surface boundary.</z:documentation>
        </z:annotation>
        <z:sequence z:occ="1:1">
          <z:element z:name="gml:LinearRing" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:LinearRingType" z:typeCategory="cc" z:substitutionGroup="gml:AbstractRing" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
            <z:annotation>
              <z:documentation>A LinearRing is defined by four or more coordinate tuples, with linear interpolation between them; the first and last coordinates shall be coincident. The number of direct positions in the list shall be at least four.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
      </z:complexType>
      <z:complexType z:name="gml:LinearRingType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:baseType z:name="gml:AbstractRingType" z:typeCategory="ce"/>
        <z:extension z:name="gml:LinearRingType">
          <z:sequence z:occ="1:1">
            <z:choice z:occ="1:1">
              <z:choice z:minOccurs="4" z:maxOccurs="unbounded" z:occ="4:*">
                <z:element z:name="gml:pos" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
                <z:element z:name="gml:pointProperty" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:PointPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
                  <z:annotation>
                    <z:documentation>This property element either references a point via the XLink-attributes or contains the point element. pointProperty is the predefined property which may be used by GML Application Schemas whenever a GML feature has a property with a value that is substitutable for Point.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:choice>
              <z:element z:name="gml:posList" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:DirectPositionListType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd"/>
            </z:choice>
          </z:sequence>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:PolygonType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:baseType z:name="gml:AbstractGMLType" z:typeCategory="cc">
          <z:sequence z:occ="1:1">
            <z:group z:name="gml:StandardObjectProperties" z:reference="yes" z:groupFromCache="yes" z:occ="1:1">
              <z:sequence z:occ="1:1">
                <z:element z:name="gml:descriptionReference" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:ReferenceType" z:typeCategory="ca" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The value of this property is a remote text description of the object. The xlink:href attribute of the gml:descriptionReference property references the external description.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:identifier" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:CodeWithAuthorityType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>Often, a special identifier is assigned to an object by the maintaining authority with the intention that it is used in references to the object For such cases, the codeSpace shall be provided. That identifier is usually unique either globally or within an application domain. gml:identifier is a pre-defined property for such identifiers.</z:documentation>
                  </z:annotation>
                </z:element>
                <z:element z:name="gml:name" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:CodeType" z:typeCategory="cs" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
                  <z:annotation>
                    <z:documentation>The gml:name property provides a label or identifier for the object, commonly a descriptive name. An object may have several names, typically assigned by different authorities. gml:name uses the gml:CodeType content model.  The authority for a name is indicated by the value of its (optional) codeSpace attribute.  The name may or may not be unique, as determined by the rules of the organization responsible for the codeSpace.  In common usage there will be one name per authority, so a processing application may select the name from its preferred codeSpace.</z:documentation>
                  </z:annotation>
                </z:element>
              </z:sequence>
            </z:group>
          </z:sequence>
          <z:attribute z:name="gml:id" z:reference="yes" z:ref="gml:id" z:use="required" z:occ="1:1" z:type="xs:ID" z:typeCategory="sb" z:typeDesc="xs:ID" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute gml:id supports provision of a handle for the XML element representing a GML Object. Its use is mandatory for all GML objects. It is of XML type ID, so is constrained to be unique in the XML document within which it occurs.</z:documentation>
            </z:annotation>
          </z:attribute>
        </z:baseType>
        <z:extension z:name="gml:AbstractGeometryType">
          <z:attributeGroup z:name="gml:SRSReferenceGroup" z:reference="yes" z:ref="gml:SRSReferenceGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
            <z:annotation>
              <z:documentation>The attribute group SRSReferenceGroup is an optional reference to the CRS used by this geometry, with optional additional information to simplify the processing of the coordinates when a more complete definition of the CRS is not needed.
In general the attribute srsName points to a CRS instance of gml:AbstractCoordinateReferenceSystem. For well-known references it is not required that the CRS description exists at the location the URI points to. 
If no srsName attribute is given, the CRS shall be specified as part of the larger context this geometry element is part of.</z:documentation>
            </z:annotation>
            <z:attribute z:name="srsName" z:type="xs:anyURI" z:typeCategory="sb" z:typeDesc="xs:anyURI" z:occ="1:1"/>
            <z:attribute z:name="srsDimension" z:type="xs:positiveInteger" z:typeCategory="sb" z:typeDesc="xs:positiveInteger" z:occ="1:1"/>
            <z:attributeGroup z:name="gml:SRSInformationGroup" z:reference="yes" z:ref="gml:SRSInformationGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/geometryBasic0d1d-extract.xsd">
              <z:annotation>
                <z:documentation>The attributes uomLabels and axisLabels, defined in the SRSInformationGroup attribute group, are optional additional and redundant information for a CRS to simplify the processing of the coordinate values when a more complete definition of the CRS is not needed. This information shall be the same as included in the complete definition of the CRS, referenced by the srsName attribute. When the srsName attribute is included, either both or neither of the axisLabels and uomLabels attributes shall be included. When the srsName attribute is omitted, both of these attributes shall be omitted.
The attribute axisLabels is an ordered list of labels for all the axes of this CRS. The gml:axisAbbrev value should be used for these axis labels, after spaces and forbidden characters are removed. When the srsName attribute is included, this attribute is optional. When the srsName attribute is omitted, this attribute shall also be omitted.
The attribute uomLabels is an ordered list of unit of measure (uom) labels for all the axes of this CRS. The value of the string in the gml:catalogSymbol should be used for this uom labels, after spaces and forbidden characters are removed. When the axisLabels attribute is included, this attribute shall also be included. When the axisLabels attribute is omitted, this attribute shall also be omitted.</z:documentation>
              </z:annotation>
            </z:attributeGroup>
          </z:attributeGroup>
        </z:extension>
        <z:extension z:name="gml:AbstractGeometricPrimitiveType"/>
        <z:extension z:name="gml:AbstractSurfaceType"/>
        <z:extension z:name="gml:PolygonType">
          <z:sequence z:occ="1:1">
            <z:element z:name="gml:exterior" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:occ="0:1" z:type="gml:AbstractRingPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
              <z:annotation>
                <z:documentation>A boundary of a surface consists of a number of rings. In the normal 2D case, one of these rings is distinguished as being the exterior boundary. In a general manifold this is not always possible, in which case all boundaries shall be listed as interior boundaries, and the exterior will be empty.</z:documentation>
              </z:annotation>
            </z:element>
            <z:element z:name="gml:interior" z:reference="yes" z:elementFromCache="yes" z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*" z:type="gml:AbstractRingPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
              <z:annotation>
                <z:documentation>A boundary of a surface consists of a number of rings. The "interior" rings separate the surface / surface patch from the area enclosed by the rings.</z:documentation>
              </z:annotation>
            </z:element>
          </z:sequence>
        </z:extension>
      </z:complexType>
      <z:complexType z:name="gml:SurfaceArrayPropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>gml:SurfaceArrayPropertyType is a container for an array of surfaces. The elements are always contained in the array property, referencing geometry elements or arrays of geometry elements via XLinks is not supported.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:maxOccurs="unbounded" z:occ="0:*">
          <z:element z:name="gml:AbstractSurface" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractSurfaceType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
      <z:complexType z:name="gml:SurfacePropertyType" z:typeCategory="cc" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
        <z:annotation>
          <z:documentation>A property that has a surface as its value domain may either be an appropriate geometry element encapsulated in an element of this type or an XLink reference to a remote geometry element (where remote includes geometry elements located elsewhere in the same document). Either the reference or the contained element shall be given, but neither both nor none.</z:documentation>
        </z:annotation>
        <z:sequence z:minOccurs="0" z:occ="0:1">
          <z:element z:name="gml:AbstractSurface" z:reference="yes" z:elementFromCache="yes" z:occ="1:1" z:type="gml:AbstractSurfaceType" z:typeCategory="cc" z:abstract="true" z:substitutionGroup="gml:AbstractGeometricPrimitive" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBasic2d-extract.xsd">
            <z:annotation>
              <z:documentation>The AbstractSurface element is the abstract head of the substitution group for all (continuous) surface elements.</z:documentation>
            </z:annotation>
          </z:element>
        </z:sequence>
        <z:attributeGroup z:name="gml:AssociationAttributeGroup" z:reference="yes" z:ref="gml:AssociationAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>XLink components are the standard method to support hypertext referencing in XML. An XML Schema attribute group, gml:AssociationAttributeGroup, is provided to support the use of Xlinks as the method for indicating the value of a property by reference in a uniform manner in GML.</z:documentation>
          </z:annotation>
          <z:attribute z:name="nilReason" z:type="gml:NilReasonType" z:typeCategory="su" z:typeDesc="Union({Union({xs:string: enum=(inapplicable|missing|template|unknown|withheld)}, {xs:string: pattern=#other:\w{2,}#})}, {xs:anyURI})" z:occ="1:1"/>
        </z:attributeGroup>
        <z:attributeGroup z:name="gml:OwnershipAttributeGroup" z:reference="yes" z:ref="gml:OwnershipAttributeGroup" xml:base="file:///home/runner/work/OJP/OJP/siri/xsd/gml/gmlBase-extract.xsd">
          <z:annotation>
            <z:documentation>Encoding a GML property inline vs. by-reference shall not imply anything about the "ownership" of the contained or referenced GML Object, i.e. the encoding style shall not imply any "deep-copy" or "deep-delete" semantics. To express ownership over the contained or referenced GML Object, the gml:OwnershipAttributeGroup attribute group may be added to object-valued property elements. If the attribute group is not part of the content model of such a property element, then the value may not be "owned".
When the value of the owns attribute is "true", the existence of inline or referenced object(s) depends upon the existence of the parent object.</z:documentation>
          </z:annotation>
          <z:attribute z:name="owns" z:type="xs:boolean" z:typeCategory="sb" z:typeDesc="xs:boolean" z:default="false" z:occ="1:1"/>
        </z:attributeGroup>
      </z:complexType>
    </z:components>
  </z:schema>
</z:domain>