<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.vdv.de/ojp" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:siri="http://www.siri.org.uk/siri" targetNamespace="http://www.vdv.de/ojp" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>OJP/OJP_Trips.xsd - Request and response definitions for trip requests and distributed journey planning</xs:documentation>
	</xs:annotation>
	<xs:import namespace="http://www.siri.org.uk/siri" schemaLocation="../siri/siri_model/siri_all-v2.0.xsd"/>
	<xs:include schemaLocation="OJP_All.xsd"/>
	<xs:annotation>
		<xs:documentation>========================================== TripRequest definitions ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="TripRequestGroup">
		<xs:annotation>
			<xs:documentation>Trip request structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Origin" type="PlaceContextStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Specifies the origin situation from where the user wants to start.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Destination" type="PlaceContextStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Specifies the destination situation where the user is heading to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Via" type="TripViaStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Ordered series of points where the journey must pass through. If more than one via point is given all of them must be obeyed - in the correct order. The server is allowed to replace a via stop by equivalent stops.
					
					Note: Systems may support only one.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ViaSystem" type="siri:ParticipantRefStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>With this parameter a distributing system is asked to build a trip using a given System to pass through. This helps in selecting Exchange Points for this trip. ViaSystem is also used in sequence.
					Note: Systems may support only one.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NotVia" type="NotViaStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Not-via restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs that the TRIP is not allowed to pass through. If more than one not via point is given all of them must be obeyed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoChangeAt" type="NoChangeAtStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>no-change-at restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs at which no TRANSFER is allowed within a TRIP.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Params" type="TripParamStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Options to control the search behaviour and response contents.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="TripParamStructure">
		<xs:annotation>
			<xs:documentation>Trip request parameter structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="TripDataFilterGroup"/>
			<xs:group ref="TripMobilityFilterGroup"/>
			<xs:group ref="TripPolicyGroup"/>
			<xs:group ref="TripContentFilterGroup"/>
			<xs:element name="FareParam" type="FareParamStructure" minOccurs="0"/>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="TripDataFilterGroup">
		<xs:annotation>
			<xs:documentation>Data to be included/excluded from search, f.e. modes, operators.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PtModeFilter" type="PtModeFilterStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Modes (VEHICLE MODE) to be excluded or included in trip calculation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LineFilter" type="LineDirectionFilterStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Lines/Directions to include/exclude.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperatorFilter" type="OperatorFilterStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Transport operators to include/exclude.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PrivateModeFilter" type="PrivateModeFilterStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Private mobility options to include/exclude.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="VehicleFilter" type="VehicleFilterStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Filter for VEHICLE and TRAIN NUMBERs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TariffzoneFilter" type="TariffzoneFilterStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Filter for trips using only specific tariff zones.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="TripPolicyGroup">
		<xs:annotation>
			<xs:documentation>Policies that control the trip search behaviour.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="BaseTripPolicyGroup"/>
			<xs:element name="TransferLimit" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The maximum number of interchanges the user will accept per trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="OptimisationMethod" type="OptimisationMethodEnumeration"/>
				<xs:element name="OptimisationMethods" type="OptimisationMethodList" minOccurs="0">
					<xs:annotation>
						<xs:documentation>The types of algorithm that can be used for planning a journey (fastest, least walking, etc.)</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="ItModesToCover" type="IndividualModesEnumeration" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>For each mode in this list a separate monomodal trip shall be found - in addition to inter-modal solutions.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConsiderElevationData" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip calculation takes elevation data into account (bike, walk)</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="TripMobilityFilterGroup">
		<xs:annotation>
			<xs:documentation>Parameters the user can set to restrict the mobility options - particularly for interchanging.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="BaseTripMobilityFilterGroup"/>
			<xs:element name="LevelEntrance" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user needs vehicles with level entrance between  platform and vehicle, f.e. for wheelchair access.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BikeTransport" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user wants to carry a bike on public transport.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WalkSpeed" type="OpenPercentType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Deviation from average walk speed in percent. 100% percent is average speed. Less than 100 % slower, Greater than 150% faster.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AdditionalTransferTime" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional time added to all transfers (also to transfers between individual to public transport).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="TripContentFilterGroup">
		<xs:annotation>
			<xs:documentation>Parameters that control the level of detail of the trip results.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="BaseTripContentFilterGroup"/>
			<xs:element name="IncludeIntermediateStops" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include intermediate stops (between the passenger's board and alight stops).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeAlternativeOptions" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether alternative options should be presented as well. Mainly important for dominated journeys or in the case of ContinuousLegs the second-best route. Should be optimised for the user expectance (see. e.g https://theses.hal.science/tel-01848737). However, what the alternative options are may vary widely depending on the optimisation methods and filters.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeFare" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include fare information.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeOperatingDays" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include operating day information - as encoded bit string and in natural language.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="HikingProfile" default="easy" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Users hiking profile. The main element to control general walking behaviour is WalkSpeed (together with accessibility constraints). Note: possible explanations in German can be found here: https://akademie.alpinewelten.com/bergwandern/klassifizierung-von-wanderwegen</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="easy">
							<xs:annotation>
								<xs:documentation>Regular hiking/walking in valleys and plains and easy mountain trails e.g. yellow hiking signs in Switzerland or blue in Germany.</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="medium">
							<xs:annotation>
								<xs:documentation>Medium difficulty mountain trails. E.g. white-red-white hiking signs in Switzerland or red in Germany.</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="difficult">
							<xs:annotation>
								<xs:documentation>Difficult mountain trails. E.g. white-blue-white hiking signs in Switzerland or black in Germany.</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="CyclingProfile" default="fast" minOccurs="0" maxOccurs="1">
				<xs:annotation>
					<xs:documentation>Cycling profile of the user (especially for sportive activities).</xs:documentation>
				</xs:annotation>
				<xs:simpleType>
					<xs:restriction base="xs:string">
						<xs:enumeration value="fast">
							<xs:annotation>
								<xs:documentation>Fastest cycle route</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="green">
							<xs:annotation>
								<xs:documentation>Greenest cycle route</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
						<xs:enumeration value="comfortable">
							<xs:annotation>
								<xs:documentation>Family friendly and leisurely route</xs:documentation>
							</xs:annotation>
						</xs:enumeration>
					</xs:restriction>
				</xs:simpleType>
			</xs:element>
			<xs:element name="TripSummaryOnly" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, then the response will contain only summaries of the found trips. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="OptimisationMethodList">
		<xs:annotation>
			<xs:documentation>List of OptimisationMethods. The order of precedence - if used at all - is high to low. In single criteria optimisers the optimisation methods may be used in parallel and not truly used to score the results.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OptimisationMethod" type="OptimisationMethodEnumeration" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="OptimisationMethodEnumeration">
		<xs:annotation>
			<xs:documentation>The types of algorithm that can be used for planning a journey (fastest, least walking, etc.). If multiple optimisation methods are needed, then several requests should be performed in parallel.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="fastest"/>
			<xs:enumeration value="minChanges"/>
			<xs:enumeration value="leastWalking"/>
			<xs:enumeration value="leastCost"/>
			<xs:enumeration value="leastDistance">
				<xs:annotation>
					<xs:documentation>Least distance in meter. Mostly used for ALTERNATIVE MODE OF OPERATION</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="earliestArrival"/>
			<xs:enumeration value="latestDeparture"/>
			<xs:enumeration value="earliestArrivalAndLatestDeparture"/>
			<xs:enumeration value="environmentalSafety">
				<xs:annotation>
					<xs:documentation>If set, favour "green" modes/lines such as bike sharing and (electric) trains, avoid or restrict modes/lines known for higher CO2 emissions such as (conventional) taxi, ride-hailing or coach.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="extraSafe">
				<xs:annotation>
					<xs:documentation>High level of safety (referring to crime, hazards or prone to accidents). If used, certain modes, lines or zones/districts known for lower safety, i.e. higher risk of accidents and crime, may be avoided, others may be preferred. This may depend on the actual, local or time of day situation. E.g. bike or scooter may be considered unsafe in some cities/districts while safe in others.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="extraReliable">
				<xs:annotation>
					<xs:documentation>Low probability of delays, cancellations etc. If used, modes known for their (un)reliability may be avoided/preferred, and extra time added for transfers. This may depend on the actual, local or time of day situation, based on punctuality statics, traffic jam statistics or rush hours. E.g. taxis in a given city might be known to be unreliable during at 8-10 and 16-19 hours, otherwise reliable.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="scenic">
				<xs:annotation>
					<xs:documentation>Scenic (or touristic) travel. Different by modes or by the surrounding.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="quietTravel">
				<xs:annotation>
					<xs:documentation>E.g. first class or quiet compartments preferred. Journeys that are with low occupancy.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="NotViaStructure">
		<xs:annotation>
			<xs:documentation>NNot-via restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs that the TRIP is not allowed to pass through</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element ref="siri:StopPointRef"/>
				<xs:element ref="StopPlaceRef"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="NoChangeAtStructure">
		<xs:annotation>
			<xs:documentation>no-change-at restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs at which no TRANSFER is allowed within a TRIP.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element ref="siri:StopPointRef"/>
				<xs:element ref="StopPlaceRef"/>
			</xs:choice>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TariffzoneFilterStructure">
		<xs:sequence>
			<xs:element name="Exclude" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether to include or exclude given tariff zones in the list from the search. Default is to include.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TariffZones" type="TariffZoneListInAreaStructure"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>========================================== TripResponse definitions ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="TripResponseGroup">
		<xs:annotation>
			<xs:documentation>Trip response structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TripResponseContext" type="ResponseContextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Context to hold trip response objects that occur frequently.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TripResult" type="TripResultStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The trip results found by the server.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="TripResultStructure">
		<xs:annotation>
			<xs:documentation>Structure for a single trip result and associated problems.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResultId" type="xs:NMTOKEN">
				<xs:annotation>
					<xs:documentation>Id of this trip result for referencing purposes. Unique within trip response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Problem" type="TripProblemStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Problems related to this Trip result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Trip" type="TripStructure">
					<xs:annotation>
						<xs:documentation>Detailed information on trip.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TripSummary" type="TripSummaryStructure">
					<xs:annotation>
						<xs:documentation>Summary on trip. Only if requestor set TripSummaryOnly in request.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="TripFare" type="TripFareResultStructure" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TripSummaryStructure">
		<xs:annotation>
			<xs:documentation>Structure for trip overview information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TripId" type="xs:NMTOKEN">
				<xs:annotation>
					<xs:documentation>Id of this trip for referencing purposes. Unique within trip response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Origin" type="PlaceRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the origin situation of this trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Destination" type="PlaceRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Describes the arrival situation of this trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Overall duration of the trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Departure time at origin.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Arrival time at destination.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PTTripLegs" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number of public transport trip legs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Distance" type="siri:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip distance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="OperatingDaysGroup" minOccurs="0"/>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TripStructure">
		<xs:annotation>
			<xs:documentation>[an extended form of PT TRIP in TM and NeTEx as it also includes the initial and final access legs to and from public transport] whole journey from passenger origin to passenger destination in one or more trip LEGs </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TripId" type="xs:NMTOKEN">
				<xs:annotation>
					<xs:documentation>Id of this trip for referencing purposes. Unique within trip response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:duration">
				<xs:annotation>
					<xs:documentation>Overall duration of the trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="StartTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Departure time at origin.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EndTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>Arrival time at destination.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Transfers" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>Number of interchanges.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Distance" type="siri:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Trip distance.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TripLeg" type="TripLegStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Legs of the trip</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="OperatingDaysGroup" minOccurs="0"/>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="TripStatusGroup" minOccurs="0"/>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TripLegStructure">
		<xs:annotation>
			<xs:documentation>a single stage of a TRIP that is made without change of MODE or service (ie: between each interchange)</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LegId" type="xs:NMTOKEN">
				<xs:annotation>
					<xs:documentation>Id of this trip leg. Unique within trip result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ParticipantRef" type="siri:ParticipantRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>[equivalent of PARTICIPANT in SIRI] IT system that is participating in a communication with other participant(s)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="TimedLeg" type="TimedLegStructure"/>
				<xs:element name="TransferLeg" type="TransferLegStructure"/>
				<xs:element name="ContinuousLeg" type="ContinuousLegStructure"/>
			</xs:choice>
			<xs:group ref="SustainabilityGroup" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TimedLegStructure">
		<xs:annotation>
			<xs:documentation>passenger TRIP LEG with timetabled schedule.  Corresponds to a RIDE.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LegBoard" type="LegBoardStructure">
				<xs:annotation>
					<xs:documentation>Stop/Station where boarding is done</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegIntermediates" type="LegIntermediateStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>information about the intermediate passed stop points.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegAlight" type="LegAlightStructure">
				<xs:annotation>
					<xs:documentation>Stop/Station to alight</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Service" type="DatedJourneyStructure">
				<xs:annotation>
					<xs:documentation>Service that is used for this trip leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegAttribute" type="LegAttributeStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Attributes that are not valid on the whole service, but only on parts of the journey leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="OperatingDaysGroup" minOccurs="0"/>
			<xs:element name="LegTrack" type="LegTrackStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Geographic embedding of this leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="SustainabilityGroup" minOccurs="0"/>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TransferLegStructure">
		<xs:annotation>
			<xs:documentation>[a specialised type of NAVIGATION PATH in TMv6] description of a LEG which links other LEGs of a TRIP where a TRANSFER between different LOCATIONs is required</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="TransferMode" type="TransferModesEnumeration">
					<xs:annotation>
						<xs:documentation>Mode that is used for this interchange between public services.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="ContinuousMode" type="ContinuousModesEnumeration">
					<xs:annotation>
						<xs:documentation>Mode that is used for this interchange between public services.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="LegStart" type="PlaceRefStructure">
				<xs:annotation>
					<xs:documentation>Stop/Station where boarding is done</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegEnd" type="PlaceRefStructure">
				<xs:annotation>
					<xs:documentation>Stop/Station to alight</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="TimeWindowGroup"/>
			<xs:group ref="TransferDurationGroup"/>
			<xs:element name="LegDescription" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Text that describes this interchange.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="LengthType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of this interchange path.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Attribute" type="GeneralAttributeStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Note or service attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PathGuidance" type="PathGuidanceStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Structured model further describing this interchange, its geographic embedding and accessibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ContinuousLegStructure">
		<xs:annotation>
			<xs:documentation>[relates to a specific type of RIDE in TM and NeTEx] leg of a journey that is not bound to a timetable </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LegStart" type="PlaceRefStructure">
				<xs:annotation>
					<xs:documentation>Stop/Station where boarding is done</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegEnd" type="PlaceRefStructure">
				<xs:annotation>
					<xs:documentation>Stop/Station to alight</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Service" type="ContinuousServiceStructure">
				<xs:annotation>
					<xs:documentation>Service of this leg. May be "walk" in most cases, but also cycling or taxi etc.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="TimeWindowGroup"/>
			<xs:element name="Duration" type="xs:duration">
				<xs:annotation>
					<xs:documentation>Duration of this leg according to user preferences like walk speed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegDescription" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Title or summary of this leg for overview.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="LengthType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of the leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LegTrack" type="LegTrackStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Detailed description of each element of this leg including geometric projection.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PathGuidance" type="PathGuidanceStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Structured model further describing this interchange, its geographic embedding and accessibility.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="SustainabilityGroup" minOccurs="0"/>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LegBoardStructure">
		<xs:annotation>
			<xs:documentation>Describes the the situation at a stop or station at which the passenger boards a Leg of a trip including time-related information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StopPointGroup"/>
			<xs:element name="ServiceArrival" type="ServiceArrivalStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>describes the arrival situation a this leg board stop point (empty for first leg) ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceDeparture" type="ServiceDepartureStructure">
				<xs:annotation>
					<xs:documentation>describes the departure situation at this leg board stop point ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DistributorInterchangeId" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Interchange identifier of the distributing line/service at its boarding. This is not a reference. This identifier is used to recognize in a distributed environment (e.g. EU-Spirit), that two systems refer to the same line (or service) while using their own internal references. In EU-Spirit this is used to decide whether an interchange is in fact a stay-seated scanario (aka "line ID"). See https://eu-spirit.eu/</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeetsViaRequest" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This stop fulfils one of the via requirements stated in the request data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="StopCallStatusGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LegAlightStructure">
		<xs:annotation>
			<xs:documentation>Describes the situation at a stop or station at which the passenger alights from a Leg of a trip including time-related information</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StopPointGroup"/>
			<xs:element name="ServiceArrival" type="ServiceArrivalStructure">
				<xs:annotation>
					<xs:documentation>describes the arrival situation at the leg alight stop point ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceDeparture" type="ServiceDepartureStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>describes the departure situation at this leg alight stop point (empty for last leg) ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="FeederInterchangeId" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Interchange identifier of the feeding line/service at its alighting. This is not a reference. This identifier is used to recognize in a distributed environment (e.g. EU-Spirit), that two systems refer to the same line (or service) while using their own internal references. In EU-Spirit this is used to decide whether an interchange is in fact a stay-seated scanario (aka "line ID"). See https://eu-spirit.eu/</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeetsViaRequest" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This stop fulfils one of the via requirements stated in the request data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="StopCallStatusGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="LegIntermediateStructure">
		<xs:annotation>
			<xs:documentation>Describes the situation at a stop or station that lies between the LegBoard and LegAlight stop or station including time-related information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StopPointGroup"/>
			<xs:element name="ServiceArrival" type="ServiceArrivalStructure">
				<xs:annotation>
					<xs:documentation>describes the arrival situation a this leg board stop point (empty for first leg) ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceDeparture" type="ServiceDepartureStructure">
				<xs:annotation>
					<xs:documentation>describes the departure situation at this leg board stop point ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MeetsViaRequest" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This stop fulfils one of the via requirements stated in the request data.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="StopCallStatusGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PathGuidanceStructure">
		<xs:annotation>
			<xs:documentation> description of a piece of a TRIP. May include geographic information, turn instructions and accessibility information </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="PathGuidanceSection" type="PathGuidanceSectionStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>one or more path guidance sections that build the trip Leg</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PathGuidanceSectionStructure">
		<xs:annotation>
			<xs:documentation>[an extended definition of a NAVIGATION PATH in TMv6 to include the textual navigation instructions] description of a piece of a TRIP. May include geographic information, turn instructions and accessibility information </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TrackSection" type="TrackSectionStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>LINK PROJECTION on the infrastructure network of the TRIP LEG together with time information</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TurnDescription" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Textual description of a manoeuvre. This should imply the information from Manoeuvre, TurnAction, and TrackSection.RoadName.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="GuidanceAdvice" type="GuidanceAdviceEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>various types of guidance advice given to travelle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TurnAction" type="TurnActionEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>the range of alternative turns that can be described.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DirectionHint" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Textual direction hint for better understanding, e.g. "follow signs to Hamburg".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bearing" type="siri:AbsoluteBearingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Absolute bearing after the described manoeuvre.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PathLink" type="PathLinkStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Description of the type of accessibility on this navigation section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="GuidanceAdviceEnumeration">
		<xs:annotation>
			<xs:documentation>various types of guidance advice given to travelle</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="origin"/>
			<xs:enumeration value="destination"/>
			<xs:enumeration value="continue"/>
			<xs:enumeration value="keep"/>
			<xs:enumeration value="turn"/>
			<xs:enumeration value="leave"/>
			<xs:enumeration value="enter"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TurnActionEnumeration">
		<xs:annotation>
			<xs:documentation>the range of alternative turns that can be described</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="sharp left"/>
			<xs:enumeration value="left"/>
			<xs:enumeration value="half left"/>
			<xs:enumeration value="straight on"/>
			<xs:enumeration value="half right"/>
			<xs:enumeration value="right"/>
			<xs:enumeration value="sharp right"/>
			<xs:enumeration value="uturn"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:group name="TransferDurationGroup">
		<xs:annotation>
			<xs:documentation>[an attribute of a CONNECTION (not INTERCHANGE) in TMv6] calculated duration in a response taking into ccount the request parameters.; TransferDuration plus waiting time is the minimum interval between arrival and departure time..</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Duration" type="xs:duration">
				<xs:annotation>
					<xs:documentation>Overall duration of this interchange.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="WalkDuration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Walk time as part of the overall interchange duration.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="BufferTime" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Buffer time as part of the overall interchange duration. Buffer times, f.e. check in/out times, sometimes are mandatory for using certain services as f.e. airplanes, ferries or highspeed trains.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:simpleType name="AccessFeatureTypeEnumeration">
		<xs:annotation>
			<xs:documentation>Allowed values for a AccessFeature.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="elevator"/>
			<xs:enumeration value="stairs"/>
			<xs:enumeration value="seriesOfStairs"/>
			<xs:enumeration value="singleStep"/>
			<xs:enumeration value="seriesOfSingleSteps"/>
			<xs:enumeration value="escalator"/>
			<xs:enumeration value="travelator"/>
			<xs:enumeration value="ramp"/>
			<xs:enumeration value="footpath"/>
			<xs:enumeration value="shuttle"/>
			<xs:enumeration value="other"/>
			<xs:enumeration value="unkown"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="TransitionEnumeration">
		<xs:annotation>
			<xs:documentation>Transition types for interchanges.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="up"/>
			<xs:enumeration value="down"/>
			<xs:enumeration value="level"/>
			<xs:enumeration value="upAndDown"/>
			<xs:enumeration value="downAndUp"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:simpleType name="AccessibilityFeatureTypesEnumeration">
		<xs:annotation>
			<xs:documentation>Allowed values for AccessibilityFeature (for mobility and sensory impairments, assistance and important elements to pay attention to).</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="lowFloorAccess"/>
			<xs:enumeration value="stepFreeAccess"/>
			<xs:enumeration value="accessWithSteps"/>
			<xs:enumeration value="slidingStep"/>
			<xs:enumeration value="raisedKerb"/>
			<xs:enumeration value="narrowEntrance"/>
			<xs:enumeration value="wheelchairLift"/>
			<xs:enumeration value="manualRamp"/>
			<xs:enumeration value="automaticRamp"/>
			<xs:enumeration value="suitableForWheelchairs"/>
			<xs:enumeration value="suitableForUnassistedWheelchairs"/>
			<xs:enumeration value="suitableForHeaviliyDisabled"/>
			<xs:enumeration value="suitableForPushchairs"/>
			<xs:enumeration value="suitableForBicycles"/>
			<xs:enumeration value="tactilePlatformEdges"/>
			<xs:enumeration value="tactileGuidingStrips"/>
			<xs:enumeration value="tactileOrAuditorySigns"/>
			<xs:enumeration value="visualSigns"/>
			<xs:enumeration value="elevatorWithTactileButtons"/>
			<xs:enumeration value="elevatorWithAcousticAnnouncements"/>
			<xs:enumeration value="audioInformation"/>
			<xs:enumeration value="audioForHearingImpaired"/>
			<xs:enumeration value="visualDisplays"/>
			<xs:enumeration value="displaysForVisuallyImpaired"/>
			<xs:enumeration value="largePrintTimetables"/>
			<xs:enumeration value="boardingAssistance"/>
			<xs:enumeration value="onboardAssistance"/>
			<xs:enumeration value="unaccompaniedMinorAssistance"/>
			<xs:enumeration value="barrier"/>
			<xs:enumeration value="validator"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="PathLinkStructure">
		<xs:annotation>
			<xs:documentation>[TMv6] a link within a PLACE of or between two PLACEs (that is STOP PLACEs, ACCESS SPACEs or QUAYs,BOARDING POSITIONs,, POINTs OF INTEREST etc or PATH JUNCTIONs) that represents a step in a possible route for pedestrians, cyclists or other out-of-vehicle passengers within or between a PLACE.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Transition" type="TransitionEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether path is up down or level .</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessFeatureType" type="AccessFeatureTypeEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Type of physical feature of PATH LINK.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Count" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Number how often the access feature occurs in this PathLink</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="AccessibilityFeature" type="AccessibilityFeatureTypesEnumeration" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Presence of an accessibility feature on the PathLink.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="From" type="PathLinkEndStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designations of level and place where this PathLink starts.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="To" type="PathLinkEndStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Designations of level and place where this PathLink ends.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PathLinkEndStructure">
		<xs:annotation>
			<xs:documentation>Designations of a floor/level.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="LevelPublicCode" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Public identifier of the level as found on elevators and signs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LevelName" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Official name of the level.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Id" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Id of the element at this end of the PathLink (typically a PLACE, e.g. where the elevator is located).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>========================================== Multi-point trip request ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="MultiPointTripRequestGroup">
		<xs:annotation>
			<xs:documentation>Multi-point trip request structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Origin" type="PlaceContextStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Specifies the origin situation from where the user wants to start.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Destination" type="PlaceContextStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Specifies the destination situation where the user is heading to.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Via" type="TripViaStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Ordered series of points where the journey must pass through. If more than one via point is given all of them must be obeyed - in the correct order. The server is allowed to replace a via stop by equivalent stops.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NotVia" type="NotViaStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Not-via restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs that the TRIP is not allowed to pass through. If more than one not via point is given all of them must be obeyed.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoChangeAt" type="NoChangeAtStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>no-change-at restrictions for a TRIP, i.e. SCHEDULED STOP POINTs or STOP PLACEs at which no TRANSFER is allowed within a TRIP</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Params" type="MultiPointTripParamStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Options to control the search behaviour and response contents.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="MultiPointTripParamStructure">
		<xs:annotation>
			<xs:documentation>Multi-point trip request parameter structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="TripDataFilterGroup"/>
			<xs:group ref="TripMobilityFilterGroup"/>
			<xs:group ref="MultiPointTripPolicyGroup"/>
			<xs:group ref="TripContentFilterGroup"/>
			<xs:element name="FareParam" type="FareParamStructure" minOccurs="0"/>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="MultiPointTripPolicyGroup">
		<xs:annotation>
			<xs:documentation>Policies that control the multi-point trip search behaviour.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="BaseTripPolicyGroup"/>
			<xs:element name="TransferLimit" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The maximum number of interchanges the user will accept per trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OptimisationMethod" type="OptimisationMethodEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The types of algorithm that can be used for planning a journey (fastest, least walking, etc.)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiPointType" type="MultiPointTypeEnumeration" default="anyPoint" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If a solution for any one of multiple origin/destination points is sufficient. Or a distinct solution for each of the origin/destination points has to be found.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:simpleType name="MultiPointTypeEnumeration">
		<xs:annotation>
			<xs:documentation>How the multiple origin/destination points should be considered.
			Note: Unfortunately this element was underdefined before and this resulted in different implementations.
			Note: MultiPointType trumps the number of results. If the algorithm thinks it necessary to provide more results, it should.
			</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="anyPoint">
				<xs:annotation>
					<xs:documentation>if a solution for any one of multiple origin/destination points is sufficient. Some implementation will return only one origin-destination pair even for multiple results with this setting. Others will provide multiple. </xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eachOrigin">
				<xs:annotation>
					<xs:documentation>a distinct solution for each of the origin points has to be found.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eachDestination">
				<xs:annotation>
					<xs:documentation>a distinct solution for each of the destination points has to be found.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="eachOriginDestination">
				<xs:annotation>
					<xs:documentation>At least a result for each Origin-Destination pair must be presented.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="somePoints">
				<xs:annotation>
					<xs:documentation>Clarifies that some (probably the "best") origin-destination pairs should be returned.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>========================================== Multi-point trip response ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="MultiPointTripResponseGroup">
		<xs:annotation>
			<xs:documentation>Multi-point trip response structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="MultiPointType" type="MultiPointTypeEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The MultiPointType should be returned, because it may differ from the one asked. Many systems will support only a subset of the MultiPointTypes and it is important to know, what the result is based on.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiPointTripResponseContext" type="ResponseContextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Context to hold trip response objects that occur frequently.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="MultiPointTripResult" type="MultiPointTripResultStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The trip results found by the server.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="MultiPointTripResultStructure">
		<xs:annotation>
			<xs:documentation>Structure for a multipoint trip result and associated problems</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ResultId" type="xs:NMTOKEN">
				<xs:annotation>
					<xs:documentation>Id of this trip result for referencing purposes. Unique within multipoint-trip response.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Problem" type="TripProblemStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Problems related to this trip result.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:choice>
				<xs:element name="Trip" type="TripStructure">
					<xs:annotation>
						<xs:documentation>Information on the trip.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TripSummary" type="TripSummaryStructure"/>
			</xs:choice>
			<xs:group ref="MultiPointWaitTimeGroup" minOccurs="0"/>
			<xs:element name="TripFare" type="TripFareResultStructure" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="MultiPointWaitTimeGroup">
		<xs:annotation>
			<xs:documentation>Group for wait times at origin/destination.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OriginWaitTime" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional wait time at origin of this trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DestinationWaitTime" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Additional wait time at destination of this trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="TripStatusGroup">
		<xs:annotation>
			<xs:documentation>Parameters which describe the current status of a TRIP</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Unplanned" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip is an additional one that has not been planned. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Cancelled" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip is cancelled and will not be run. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Deviation" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip deviates from the planned service pattern. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Delayed" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip is delayed. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Infeasible" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip cannot be used, due to operational delays and impossible transfers. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:annotation>
		<xs:documentation>========================================== TripRefineRequest definitions ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="TripRefineRequestGroup">
		<xs:annotation>
			<xs:documentation>Trip refinement request structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RefineParams" type="TripRefineParamStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Options to control the refine</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TripResult" type="TripResultStructure">
				<xs:annotation>
					<xs:documentation>The trip result to be refined by the server.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TripResponseContext" type="ResponseContextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Context to hold objects, which are referenced within the response.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="TripRefineParamStructure">
		<xs:annotation>
			<xs:documentation>Trip refinement request parameter structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ForeignObjectRefs" type="xs:boolean" minOccurs="0">
				<xs:annotation>
					<xs:documentation>If true, then the request may contain object references from another system. Default is FALSE.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RefineLegRef" type="xs:NMTOKEN" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Refers to a leg to be refined by the server.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="TripContentFilterGroup"/>
			<xs:element name="FareParam" type="FareParamStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Parameters for fare calculation. Only used if IncludeFare is set (TripContentFilterGroup).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>========================================== TripRefineResponse definitions ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="TripRefineResponseGroup">
		<xs:annotation>
			<xs:documentation>Trip refinement response structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TripResponseContext" type="ResponseContextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Context to hold trip response objects that occur frequently.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UnknownLegRef" type="xs:NMTOKEN" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Refers to a leg that was not found in the data of the server. If the to be refined TripResult could not be found or unequivocally determined, all RefineLegRefs are returned as UnknownLegRefs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TripResult" type="TripResultStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>The trip results refined by the server.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:annotation>
		<xs:documentation>========================================== Problems ==========================================</xs:documentation>
	</xs:annotation>
	<xs:simpleType name="TripProblemTypeEnumeration">
		<xs:annotation>
			<xs:documentation>Types of problems that may be returned in responses to Trip requests.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="TRIP_NOTRIPFOUND">
				<xs:annotation>
					<xs:documentation>No trip plan could be found that meets all the parameters as they have been set by the user (start and end locations, departure/arrival time and further options possibly set by the user).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_ORIGINUNKNOWN">
				<xs:annotation>
					<xs:documentation>The start location (address, stop place, …) for the requested trip is unknown.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_DESTINATIONUNKNOWN">
				<xs:annotation>
					<xs:documentation>The end location (address, stop place, …) for the requested trip is unknown.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_VIAUNKNOWN">
				<xs:annotation>
					<xs:documentation>One of the via points is unknown.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_NOTVIAUNKNOWN">
				<xs:annotation>
					<xs:documentation>One of the not-via points is unknown.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_NOCHANGEATUNKNOWN">
				<xs:annotation>
					<xs:documentation>One of the no-change-at stations is unknown.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_NOORIGIN">
				<xs:annotation>
					<xs:documentation>No start location has been defined for the trip.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_NODESTINATION">
				<xs:annotation>
					<xs:documentation>No end location has been defined for the trip.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_ORIGINDESTINATIONIDENTICAL">
				<xs:annotation>
					<xs:documentation>Start and end of the trip are identical.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_DATETIMEERROR">
				<xs:annotation>
					<xs:documentation>The requested date and/or time do not make sense.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_DEPARTUREAFTERARRIVAL">
				<xs:annotation>
					<xs:documentation>The requested departure time at each origin is after the requested arrival time at any destination.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_DATEOUTOFRANGE">
				<xs:annotation>
					<xs:documentation>There is no timetable data available for the requested date.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_ORIGINEQUIVALENT">
				<xs:annotation>
					<xs:documentation>The requested origin stop place has been replaced by an equivalent stop place.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_DESTINATIONEQUIVALENT">
				<xs:annotation>
					<xs:documentation>The requested destination stop place has been replaced by an equivalent stop place.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_VIAEQUIVALENT">
				<xs:annotation>
					<xs:documentation>One of the requested via stop places has been replaced by an equivalent stop place.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_REALTIMEINCOMPLETE">
				<xs:annotation>
					<xs:documentation>There is no realtime information available for at least one of the services within this trip result.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_ITTIMEEXTENDED">
				<xs:annotation>
					<xs:documentation>The maximum time allowed for using modes of individual transport (mostly walking or cycling) has been extended by the system because otherwise no trip could be found.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_ITMODECHANGED">
				<xs:annotation>
					<xs:documentation>The mode of individual transport specified by the user has been replaced by the system because otherwise no trip could be found. Usually this means taking a taxi instead of walking.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_INCONVENIENTWAITING">
				<xs:annotation>
					<xs:documentation>The trip plan in this trip result contains a long waiting time.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_MULTIPOINT_NOTALLPOINTSCOVERED">
				<xs:annotation>
					<xs:documentation>No trip solution was found covering each of the requested points.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_MULTIPOINT_TOOMANYPOINTS">
				<xs:annotation>
					<xs:documentation>Too many points have been requested as departure or arrival.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="TRIP_OTHER">
				<xs:annotation>
					<xs:documentation>A problem has occurred that does not have a specific problem type.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="TripProblemStructure">
		<xs:annotation>
			<xs:documentation>Problem that may be returned in responses to trip requests.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Type" type="TripProblemTypeEnumeration">
				<xs:annotation>
					<xs:documentation>Type of the trip problem.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="ProblemDetailGroup"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
