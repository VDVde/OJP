<?xml version="1.0" encoding="UTF-8"?>
<xs:schema xmlns="http://www.vdv.de/ojp" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:siri="http://www.siri.org.uk/siri" targetNamespace="http://www.vdv.de/ojp" elementFormDefault="qualified" attributeFormDefault="unqualified">
	<xs:annotation>
		<xs:documentation>OJP/OJP_JourneySupport.xsd - Supporting definitions for journeys on public transport vehicles</xs:documentation>
	</xs:annotation>
	<xs:import namespace="http://www.siri.org.uk/siri" schemaLocation="../siri/xsd/siri_model/siri_all.xsd"/>
	<xs:include schemaLocation="OJP_All.xsd"/>
	<xs:complexType name="ServiceViaPointStructure">
		<xs:annotation>
			<xs:documentation>[a specialisation of VIA in TMv6] STOP PLACE or SCHEDULED STOP POINT as a VIA for a particular SERVICE PATTERN. Specialisation of a VIA.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StopPointGroup"/>
			<xs:element name="DisplayPriority" type="PriorityType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Priority of this via point to be displayed when space is limited.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ProductCategoryStructure">
		<xs:annotation>
			<xs:documentation>Product category based on NeTEx/SIRI. A product category is a classification for VEHICLE JOURNEYs to express some common properties of journeys for marketing and fare products.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Full name of this product category, e.g. "Autoreisezug" in Switzerland or "Dampfschiff"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ShortName" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Short name or acronym of the product category, likely to be published, e.g. "BAV", "ARZ", "TGV". The product category is more important for publication in Switzerland than Mode / Submode.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="ProductCategoryRef" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A reference to the product category. This is the internal code used within the reference frameworks (NeTEx, SIRI). It is usually not displayed, but interpreted by the technical system, e.g. "ch:1:TypeOfProductCategory:ARZ" (Autoreisezug in Switzerland) or "ch:1:TypeOfProductCategory:BAV".</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TripViaStructure">
		<xs:annotation>
			<xs:documentation>VIA restrictions for a TRIP.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="ViaPoint" type="PlaceRefStructure">
				<xs:annotation>
					<xs:documentation>Reference to specify the via place.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DwellTime" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Duration the passenger wants to stay at the via place. Default is 0.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceSectionStructure">
		<xs:annotation>
			<xs:documentation>Properties of a service combined with a stop sequence interval. In many cases the elements about VEHICLE JOURNEY etc that are bundled in a service in OJP are enough for the whole Leg. However, in some cases enough of these element change within a single leg (usually a PT RIDE LEG), that e.g. the LINE, OPERATOR, FARE SECTION, COMMON SECTION changes. Possible cases are splitting/joining of trains, international trains at the border. Then it becomes necessary to tell at a StopPoint that the information has changed and this results in multiple ServiceSections. This implementation of ServiceSection is a view of some parts of JOURNEY PARTs.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StopSequenceIntervalGroup"/>
			<xs:group ref="ServiceGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="StopSequenceIntervalGroup">
		<xs:annotation>
			<xs:documentation>Interval of stop sequence numbers of a given TimedLeg which may be one or multiple VEHICLE JOURNEYs. The numbering starts with 1. An example is the train from Bern to Zweisimmen that is split in Spiez. The sequence 1-3 is the first sequence, 3-9 the second.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="FromStopSequenceNumber" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Stop sequence number, where the interval begins (inclusive). If missing, the interval begins at the beginning of the leg (or at the beginning of the journey for uses in StopEvents and TripInfo).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ToStopSequenceNumber" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Stop sequence number, where the interval ends (inclusive). If missing, the interval ends at the end of the leg (or at the end of the journey for uses in StopEvents and TripInfo).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ScheduledJourneyGroup">
		<xs:annotation>
			<xs:documentation>Vehicle journey (not dated).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="JourneyRef"/>
			<xs:element name="PublicCode" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Public code of the SERVICE JOURNEY (same meaning as in NeTEx). Examples: "512", "S8" or "Circle Line" or "ICE 488".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceSection" type="ServiceSectionStructure" minOccurs="1" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Service, can be attributed with a sequence of stop sequence intervals with respective service properties (a view of some parts of JOURNEY PART). The standard case is exactly one Service.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ServiceGroup">
		<xs:annotation>
			<xs:documentation>Properties of a service (line and direction): attributes of Continuous Journey Structure or Dated Journey Structure.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="siri:LineDirectionGroup"/>
			<xs:element name="Mode" type="ModeStructure">
				<xs:annotation>
					<xs:documentation>[a specialisation of MODE in TMv6] an extended range of VEHICLE MODEs, aggregating them with some SUBMODEs</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProductCategory" type="ProductCategoryStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A product category for the service. This is a classification defined in NeTEx/SIRI used to identify groups of journeys with some special properties for marketing and fare products, e.g. "TE2" for SNCF or a special panorama train "PE" in Switzerland.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="PublishedServiceName" type="InternationalTextStructure">
				<xs:annotation>
					<xs:documentation>Line name or service description as known to the public, f.e. "512", "S8" or "Circle Line" or "ICE 488".</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrainNumber" type="xs:normalizedString" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains the TrainNumber from NeTEx (TRAIN NUMBER from Transmodel). If several TrainNumber types exist, use the commercial one. In some cases also non-train modes will use TrainNumber.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="siri:VehicleRef" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains the Vehicle reference of the vehicle. In Transmodel this may be the VEHICLE Id.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OperatorRefs" type="OperatorRefs_RelStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>References to the OPERATORS. Multiple OPERATORS in case a ContinuousLeg can be operated by more than one operator, especially in the ALTERNATIVE MODE OF OPERATION where there can be dozens of taxi companies and many free floating sharing companies.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RouteDescription" type="InternationalTextStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Descriptive text for a route, f.e. "Airport via City Centre"</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Via" type="ServiceViaPointStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Via points of the service that may help identify the vehicle to the public (In Transmodel modeled as TRIP REQUEST PLACE.TRIP VIA PLACE.GoVia; it will also most probably be detailed as a VIA and associated DESTINATION DISPLAY in the ROUTE description).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Attribute" type="GeneralAttributeStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Note or service attribute.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ServiceOriginGroup">
		<xs:annotation>
			<xs:documentation>First serviced stop of a vehicle journey (also VEHICLE MEETING POINT or ADDRESSABLE PLACE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="OriginStopPointRef" type="siri:StopPointRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>First stop of the vehicle journey; origin stop point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OriginText" type="InternationalTextStructure">
				<xs:annotation>
					<xs:documentation>Label for first stop.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ServiceDestinationGroup">
		<xs:annotation>
			<xs:documentation>Last serviced stop of a vehicle journey (also VEHICLE MEETING POINT or ADDRESSABLE PLACE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="DestinationStopPointRef" type="siri:StopPointRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Last stop of vehicle journey; destination stop point.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="DestinationText" type="InternationalTextStructure">
				<xs:annotation>
					<xs:documentation>Label for last stop.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="RouteDescriptionGroup">
		<xs:annotation>
			<xs:documentation>Descriptive text for a route, f.e. "Airport via City Centre"</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="RouteDescriptionText" type="InternationalTextStructure"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="DatedJourneyGroup">
		<xs:annotation>
			<xs:documentation>Vehicle journey that runs at a specific date.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="OperatingDayRef">
				<xs:annotation>
					<xs:documentation>Reference to an Operating Day.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element ref="siri:VehicleRef" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Contains the Vehicle reference of the vehicle. In Transmodel this may be the VEHICLE Id.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="ScheduledJourneyGroup"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="PrivateServiceGroup">
		<xs:annotation>
			<xs:documentation>specific service operated by a Private Mode</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="JourneyRef" minOccurs="0"/>
			<xs:element name="PrivateMode" type="PrivateModesEnumeration">
				<xs:annotation>
					<xs:documentation>[a category of MODE in TMv6] MODEs offered by private individuals </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OrganisationRef" type="siri:OperatorRefStructure" minOccurs="0"/>
			<xs:element name="InfoUrl" type="WebLinkStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Link to web page providing more details on service.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:simpleType name="ReservationNeededEnumeration">
		<xs:annotation>
			<xs:documentation>Possible types of reservation needed for services.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="none"/>
			<xs:enumeration value="service">
				<xs:annotation>
					<xs:documentation>A reservation/booking is required for the service to operate. BookingArrangement should then be used and contain more details.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="stop">
				<xs:annotation>
					<xs:documentation>A reservation/booking is required for the service to call at the stop for boarding and alighting. BookingArrangement should then be used and contain more details.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="DatedJourneyStructure">
		<xs:annotation>
			<xs:documentation>[equivalent to  DATED VEHICLE JOURNEY in TMv6]  passenger carrying VEHICLE JOURNEY for one specified DAY TYPE for which the pattern of working is in principle defined by a SERVICE JOURNEY PATTERN. DatedJourney details of a service include its operating days. </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:group ref="DatedJourneyGroup"/>
				<xs:group ref="PrivateServiceGroup"/>
			</xs:choice>
			<xs:group ref="ServiceOriginGroup" minOccurs="0"/>
			<xs:group ref="siri:ServiceInfoGroup" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The group contains the VehicleFeatureRef from SIRI that are used to describe some characteristics of vehicles and don't rely on FORMATION.</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:group ref="ServiceDestinationGroup"/>
			<xs:group ref="ServiceStatusGroup"/>
			<xs:group ref="siri:JourneyFormationGroup">
				<xs:annotation>
					<xs:documentation>The formation elements on the journey level.</xs:documentation>
				</xs:annotation>
			</xs:group>
			<xs:element name="BookingArrangements" type="BookingArrangementsContainerStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Container with information on booking possibilities for this service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ReservationNeeded" type="ReservationNeededEnumeration" default="none" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Indicates whether this service needs some kind of reservation or booking to run.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TripLocationStructure">
		<xs:annotation>
			<xs:documentation>A trip location represents the current logical position of a journey service. It can be used similarly to a place e.g. for starting a new trip request from within this service. A trip location does not(!) describe the relative position of a traveller within a vehicle, e.g. the seat.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element ref="OperatingDayRef"/>
			<xs:element ref="JourneyRef"/>
			<xs:group ref="siri:LineIdentityGroup"/>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>========================================== Times, Calls, Time context ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="TimeWindowGroup">
		<xs:annotation>
			<xs:documentation>The window of opportunity that the traveller has to perform this leg of the journey (e.g. a bridge is only open during a given interval).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TimeWindowStart" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time at which window begins.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TimeWindowEnd" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time at which window ends.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="ServiceTimeGroup">
		<xs:annotation>
			<xs:documentation>Contains at least scheduled time, but can contain real time and estimated times</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TimetabledTime" type="xs:dateTime">
				<xs:annotation>
					<xs:documentation>time at point as it is published</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RecordedAtTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>time as it was recorded</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EstimatedTime" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>estimated time (for prognosis)</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="EstimatedTimeBandGroup" minOccurs="0"/>
		</xs:sequence>
	</xs:group>
	<xs:group name="EstimatedTimeBandGroup">
		<xs:annotation>
			<xs:documentation>Range for estimated time.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="EstimatedTimeLow" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Estimated lower limit for time.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="EstimatedTimeHigh" type="xs:dateTime" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Estimated upper limit for time.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="ServiceArrivalStructure">
		<xs:annotation>
			<xs:documentation>Arrival times of a service at a stop (group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME, equals MONITORED LEG ARRIVAL).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="ServiceTimeGroup"/>
			<xs:element ref="siri:ArrivalFormationAssignment" minOccurs="0" maxOccurs="unbounded"/>
			<!-- comes with SIRI 2.1 -->
			<!-- TODO the quays should be moved here, too -->
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="ServiceDepartureStructure">
		<xs:annotation>
			<xs:documentation>Departure times of a service at a stop (group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME, equals MONITORED LEG DEPARTURE).</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="ServiceTimeGroup"/>
			<xs:element ref="siri:DepartureFormationAssignment" minOccurs="0" maxOccurs="unbounded"/>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="CallAtStopStructure">
		<xs:annotation>
			<xs:documentation>[same as CALL in SIRI] the meeting of a VEHICLE JOURNEY with a specific SCHEDULED STOP POINT </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:group ref="StopPointGroup"/>
			<xs:element name="ServiceArrival" type="ServiceArrivalStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Arrival times of the service at this stop ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ServiceDeparture" type="ServiceDepartureStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Departure times of the service at this stop ( group of attributes of TIMETABLED PASSING TIME, ESTIMATED PASSING TIME, OBSERVED PASSING TIME).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:group ref="StopCallStatusGroup"/>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:group name="StopCallStatusGroup">
		<xs:annotation>
			<xs:documentation>Status properties for the vehicle call at this stop.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Order" type="xs:positiveInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Sequence number of this stop in the service pattern of the journey.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RequestStop" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The vehicle journey calls at this stop only on demand.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UnplannedStop" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>This stop has not been planned by the planning department.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NotServicedStop" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The vehicle will not call at this stop despite earlier planning.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoBoardingAtStop" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Boarding will not be allowed at this stop of this journey.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoAlightingAtStop" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Alighting will not be allowed at this stop of this journey.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:sequence>
				<xs:element ref="siri:ExpectedDepartureOccupancy" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>The Occupancy structure from SIRI can be used here. It is recommended to mainly have one ExpectedDepartureOccupancy for each FareClass and mainly focus on OccupancyLevel and OccupancyPercentage. For more details have a look at the SIRI documentation.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element ref="siri:ExpectedDepartureCapacities" minOccurs="0" maxOccurs="unbounded">
					<xs:annotation>
						<xs:documentation>The Capacity structure also will probably rarely be used and parsed. When used, then it mainly show elements that are important for accessibility.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:sequence>
		</xs:sequence>
	</xs:group>
	<xs:group name="ServiceStatusGroup">
		<xs:annotation>
			<xs:documentation>parameters which describe the current status of a DATED VEHICLE JOURNEY</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Unplanned" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip is an additional one that has not been planned. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Cancelled" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip is cancelled and will not be run. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Deviation" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether this trip deviates from the planned service pattern. Default is false.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Occupancy" type="siri:OccupancyEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>[equivalent to OCCUPANCY in SIRI] passenger load status of a VEHICLE. If omitted, not known.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:complexType name="ContinuousServiceStructure">
		<xs:annotation>
			<xs:documentation>[a special form of SERVICE JOURNEY in TMv6] a vehicle movement on a continuous, non-timetabled service.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="ContinuousMode" type="ContinuousModesEnumeration">
					<xs:annotation>
						<xs:documentation>Continuous transport options.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="IndividualMode" type="IndividualModesEnumeration">
					<xs:annotation>
						<xs:documentation>Individual transport options.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:choice>
				<xs:group ref="DatedJourneyGroup" minOccurs="0"/>
				<xs:element name="SharingService" type="SharingServiceStructure" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Shared mobility offer.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:group ref="ServiceOriginGroup" minOccurs="0"/>
			<xs:group ref="ServiceDestinationGroup" minOccurs="0"/>
			<xs:element name="BookingArrangements" type="BookingArrangementsContainerStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Container with information on booking possibilities for this service.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="SituationFullRefs" type="SituationRefList" minOccurs="0">
				<xs:annotation>
					<xs:documentation>A list of references to SITUATIONs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
	<xs:simpleType name="VehicleProgressEnumeration">
		<xs:annotation>
			<xs:documentation>Vehicle progress relative to timetable service pattern.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="Not yet operated"/>
			<xs:enumeration value="Operation finished"/>
			<xs:enumeration value="At stop"/>
			<xs:enumeration value="Between stops"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:complexType name="VehiclePositionStructure">
		<xs:annotation>
			<xs:documentation>Geographical and logical position of a vehicle.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="GeoPosition" type="siri:LocationStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Geographic position of vehicle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Progress" type="VehicleProgressEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Logical progress of vehicle relative to service pattern.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Bearing" type="siri:AbsoluteBearingType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Bearing in compass degrees in which vehicle is heading (expected to be consistent with Transmodel ROUTE -or LEG TRACK- and PATH GUIDANCE).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ProgressBetweenStops" type="siri:ProgressBetweenStopsStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Provides information about the progress of the vehicle along its current link, that is link from previous visited top to current position.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="PlaceContextStructure">
		<xs:annotation>
			<xs:documentation>[a view of PLACE in TMv6] a PLACE and access to it by individual transport </xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice>
				<xs:element name="PlaceRef" type="PlaceRefStructure">
					<xs:annotation>
						<xs:documentation>Static place.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TripLocation" type="TripLocationStructure">
					<xs:annotation>
						<xs:documentation>Location within a (moving) vehicle.</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:choice minOccurs="0">
				<xs:element name="DepArrTime" type="xs:dateTime" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Time when departure/arrival from/to location is required.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:element name="TimeAllowance" type="xs:duration" minOccurs="0">
					<xs:annotation>
						<xs:documentation>Extra time needed before reaching/after leaving this location (an example of a TRIP ACCESS CONSTRAINT. In Transmodel it is modeled more extensively and could relate to ACCESS MODE e.g. walk max 5 mintues, but cycle 10 minutes).</xs:documentation>
					</xs:annotation>
				</xs:element>
			</xs:choice>
			<xs:element name="IndividualTransportOptions" type="IndividualTransportOptionsStructure" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Options how to access/leave the place by individual transport.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>========================================== Filter Groups ==========================================</xs:documentation>
	</xs:annotation>
	<xs:group name="NumberOfResultsGroup">
		<xs:annotation>
			<xs:documentation>parameter to control the number of TRIP results before/after a point in time. May NOT be used when departure time at origin AND arrival time at destination are set</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NumberOfResultsBefore" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>The desired number of trip results before the given time (at origin or destination).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NumberOfResultsAfter" type="xs:nonNegativeInteger">
				<xs:annotation>
					<xs:documentation>The desired number of trip results after the given time (at origin or destination).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:simpleType name="UseRealtimeDataEnumeration">
		<xs:restriction base="xs:string">
			<xs:enumeration value="full">
				<xs:annotation>
					<xs:documentation>Full use of real-time information, including removal of SERVICE JOURNEYS (TRIP REQUEST POLICY.UseRealTime is only a boolean in Transmodel).</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="explanatory">
				<xs:annotation>
					<xs:documentation>Cancelled and delayed SERVICE JOURNEYs are still returned, but an additional explanatory textual information is provide to decribe their current real-time status.</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="none">
				<xs:annotation>
					<xs:documentation>Only based on timetable data</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>
	<xs:group name="BaseTripPolicyGroup">
		<xs:annotation>
			<xs:documentation>Policies that control the trip search behaviour for both public and individual transport.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:choice minOccurs="0">
				<xs:element name="NumberOfResults" type="xs:positiveInteger" minOccurs="0">
					<xs:annotation>
						<xs:documentation>The number of trip results that the user wants to see at least (TRIP REQUEST POLICY.maximumNumberofJourneys). Be aware that some implementatins will deliver one of the TripResults before the indicated departure time. This means one always has to check the results against the parameters before using them.</xs:documentation>
					</xs:annotation>
				</xs:element>
				<xs:group ref="NumberOfResultsGroup" minOccurs="0"/>
			</xs:choice>
			<xs:element name="TimeWindow" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Time window trips should lie within. Starting from time given in PlaceContext. Implements TRIP REQUEST.FlexibilityWindow. All trips in the window should be provided by the implmentation.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="UseRealtimeData" type="UseRealtimeDataEnumeration" default="full" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The way real-time data should be used in the calculation of the trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ImmediateTripStart" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the trip calculation should find a solution that starts immediately (e.g. because the user is already on the way) instead of finding the latest possible start opportunity. Default is FALSE.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TransferLimit" type="xs:nonNegativeInteger" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The maximum number of interchanges the user will accept per trip.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="OptimisationMethod" type="OptimisationMethodEnumeration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The type of algorithm to be used in the calculation of the trip (fastest, least walking, etc.).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="ConsiderElevationData" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the trip calculation should take elevation data into account (bike, walk). Default is FALSE.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="BaseTripMobilityFilterGroup">
		<xs:annotation>
			<xs:documentation>Base mobility options to be applied for both public and individual transport.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="NoSingleStep" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to pass over (or wants to avoid) single steps. Stairs and non-level entrances are not excluded.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoStairs" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to walk up/down stairs.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoEscalator" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to use an escalator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoElevator" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to use an elevator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoRamp" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to use a ramp.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoSight" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to see.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="NoTravelator" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user is not able to use a travelator.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LevelEntrance" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user needs vehicles with level entrance between platform and vehicle.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LevelEntranceOrBoardingAid" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>The user needs vehicles with level entrance between platform and vehicle, an appropriate ramp, or assistance for boarding or alighting (for assisted and unassisted wheelchairs, or similar constraints).</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:group name="BaseTripContentFilterGroup">
		<xs:annotation>
			<xs:documentation>Parameters to control the level of detail of both public and individual transport journey results.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="IncludeTrackSections" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include TrackSection elements to describe the geographic route of each journey leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeLegProjection" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include the geographic projection (coordinates) of each journey leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeTurnDescription" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include turn-by-turn instructions for each journey leg.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeAccessFeatures" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include the access features (stairs, elevator, etc.) on each path link.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeAccessFeaturesStatus" type="xs:boolean" default="false" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the result should include real time status of access features to indicate broken equipment.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeAccessibilityDetails" type="AccessibilityDetailsProfileEnumeration" minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>Which accessibility features and other accessibility-related information to retrieve (e.g. guidance text for the visually impaired).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludePlacesContext" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Whether the place context is needed. If a requestor has that information already, the response can be made slimmer, when set to false. Default is true. </xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="IncludeSituationsContext" type="xs:boolean" default="true" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Wheter the situation context is needed. If a requestor has that information by other means or can't process it, the response can be made slimmer, when set to false. Default is true</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:group>
	<xs:simpleType name="AccessibilityDetailsProfileEnumeration">
		<xs:annotation>
			<xs:documentation>Allowed values for AccessibilityDetails.</xs:documentation>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="visualImpairment"/>
			<xs:enumeration value="auditoryImpairment"/>
			<xs:enumeration value="mobilityImpairment"/>
			<xs:enumeration value="bicycle"/>
			<xs:enumeration value="general"/>
		</xs:restriction>
	</xs:simpleType>
	<xs:annotation>
		<xs:documentation>========================================== Leg Attributes ==========================================</xs:documentation>
	</xs:annotation>
	<xs:complexType name="LegAttributeStructure">
		<xs:annotation>
			<xs:documentation>Attributes that are not valid on the whole service, but only on section of a TRIP made on a single MODE without interchange between boarding and alighting (facilities available on a specified (part of a) Leg of a VEHICLE JOURNEY)</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="GeneralAttributeStructure">
				<xs:sequence>
					<xs:element name="FromStopSeqNumber" type="xs:positiveInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The attribute is valid from the stop point with this sequence number within the leg. If missing it is valid from the beginning of the leg.</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="ToStopSeqNumber" type="xs:positiveInteger" minOccurs="0">
						<xs:annotation>
							<xs:documentation>The attribute is valid to the stop point (inclusively) with this sequence number within the leg. If missing it is valid to the end of the leg.</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>
	<xs:annotation>
		<xs:documentation>========================================== Leg Projection ==========================================</xs:documentation>
	</xs:annotation>
	<xs:complexType name="LegTrackStructure">
		<xs:annotation>
			<xs:documentation>The LINK PROJECTION of a Leg onto the topography of the route being followed.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TrackSection" type="TrackSectionStructure" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>A geographical view of a Transmodel LEG TRACK together with duration and length that can be used for representing the leg on a map. The points may be STOP PLACE, SCHEDULED STOP POINT, coordinates or ADDRESSes. Specialisation of SECTION.</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>
	<xs:complexType name="TrackSectionStructure">
		<xs:annotation>
			<xs:documentation>SECTION of a LEG TRACK on the infrastructure network of the LEG together with time information.</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="TrackSectionStart" type="PlaceRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Start place of this track section (Start of a SECTION of a LEG.TRACK).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="TrackSectionEnd" type="PlaceRefStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>End place of this track section (End of a SECTION of a LEG.TRACK).</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="LinkProjection" type="LinearShapeStructure" minOccurs="0">
				<xs:annotation>
					<xs:documentation>An oriented correspondence from one LINK of a source layer, onto an entity in a target layer: e.g. LINK SEQUENCE.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="RoadName" type="xs:string" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Name of the road this track section is attached to (LEG TRACK.SECTION NAME, may also be something like "bicycle line along Tellstrasse").</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Duration" type="xs:duration" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Duration the passenger needs to travel through this track section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Length" type="siri:DistanceType" minOccurs="0">
				<xs:annotation>
					<xs:documentation>Length of this track section.</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Extension" type="xs:anyType" minOccurs="0"/>
		</xs:sequence>
	</xs:complexType>
</xs:schema>
